### YamlMime:ManagedReference
items:
- uid: BlazerTech.CharacterManagement.Characters.SingleSlotCharacterGroup
  commentId: T:BlazerTech.CharacterManagement.Characters.SingleSlotCharacterGroup
  id: SingleSlotCharacterGroup
  parent: BlazerTech.CharacterManagement.Characters
  children:
  - BlazerTech.CharacterManagement.Characters.SingleSlotCharacterGroup.#ctor(BlazerTech.CharacterManagement.Characters.LayeredCharacterTypeSO,System.String)
  - BlazerTech.CharacterManagement.Characters.SingleSlotCharacterGroup.#ctor(BlazerTech.CharacterManagement.Characters.SingleSlotCharacterGroup.SingleSlotCharacterGroup_DTO,BlazerTech.CharacterManagement.Characters.LayeredCharacterTypeSO)
  - BlazerTech.CharacterManagement.Characters.SingleSlotCharacterGroup.AddCharacter(BlazerTech.CharacterManagement.Characters.LayeredCharacter)
  - BlazerTech.CharacterManagement.Characters.SingleSlotCharacterGroup.Character
  - BlazerTech.CharacterManagement.Characters.SingleSlotCharacterGroup.ContainsCharacter(BlazerTech.CharacterManagement.Characters.LayeredCharacter)
  - BlazerTech.CharacterManagement.Characters.SingleSlotCharacterGroup.ContainsCharacterWithGUID(System.Guid)
  - BlazerTech.CharacterManagement.Characters.SingleSlotCharacterGroup.ContainsCharacterWithName(System.String)
  - BlazerTech.CharacterManagement.Characters.SingleSlotCharacterGroup.RemoveCharacter
  langs:
  - csharp
  - vb
  name: SingleSlotCharacterGroup
  nameWithType: SingleSlotCharacterGroup
  fullName: BlazerTech.CharacterManagement.Characters.SingleSlotCharacterGroup
  type: Class
  source:
    remote:
      path: Assets/BlazerTech Character Management System/Scripts/Core/Characters/Layered Characters/Character Groups/CharacterGroupDefinitions.cs
      branch: main
      repo: https://github.com/Legendaryswordsman2/BlazerTech-Character-Management-System.git
    id: SingleSlotCharacterGroup
    path: ../../../Unity/Unity Projects/BlazerTech Character Management System/Assets/BlazerTech Character Management System/Scripts/Core/Characters/Layered Characters/Character Groups/CharacterGroupDefinitions.cs
    startLine: 31
  assemblies:
  - Assembly-CSharp
  namespace: BlazerTech.CharacterManagement.Characters
  syntax:
    content: >-
      [Serializable]

      public sealed class SingleSlotCharacterGroup : CharacterGroupBase
    content.vb: >-
      <Serializable>

      Public NotInheritable Class SingleSlotCharacterGroup Inherits CharacterGroupBase
  inheritance:
  - System.Object
  - BlazerTech.CharacterManagement.Characters.CharacterGroupBase
  inheritedMembers:
  - BlazerTech.CharacterManagement.Characters.CharacterGroupBase.GroupName
  - BlazerTech.CharacterManagement.Characters.CharacterGroupBase.CharacterType
  - BlazerTech.CharacterManagement.Characters.CharacterGroupBase.OnCharacterChanged
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
- uid: BlazerTech.CharacterManagement.Characters.SingleSlotCharacterGroup.Character
  commentId: P:BlazerTech.CharacterManagement.Characters.SingleSlotCharacterGroup.Character
  id: Character
  parent: BlazerTech.CharacterManagement.Characters.SingleSlotCharacterGroup
  langs:
  - csharp
  - vb
  name: Character
  nameWithType: SingleSlotCharacterGroup.Character
  fullName: BlazerTech.CharacterManagement.Characters.SingleSlotCharacterGroup.Character
  type: Property
  source:
    remote:
      path: Assets/BlazerTech Character Management System/Scripts/Core/Characters/Layered Characters/Character Groups/CharacterGroupDefinitions.cs
      branch: main
      repo: https://github.com/Legendaryswordsman2/BlazerTech-Character-Management-System.git
    id: Character
    path: ../../../Unity/Unity Projects/BlazerTech Character Management System/Assets/BlazerTech Character Management System/Scripts/Core/Characters/Layered Characters/Character Groups/CharacterGroupDefinitions.cs
    startLine: 34
  assemblies:
  - Assembly-CSharp
  namespace: BlazerTech.CharacterManagement.Characters
  syntax:
    content: public LayeredCharacter Character { get; }
    parameters: []
    return:
      type: BlazerTech.CharacterManagement.Characters.LayeredCharacter
    content.vb: Public Property Character As LayeredCharacter
  overload: BlazerTech.CharacterManagement.Characters.SingleSlotCharacterGroup.Character*
- uid: BlazerTech.CharacterManagement.Characters.SingleSlotCharacterGroup.#ctor(BlazerTech.CharacterManagement.Characters.LayeredCharacterTypeSO,System.String)
  commentId: M:BlazerTech.CharacterManagement.Characters.SingleSlotCharacterGroup.#ctor(BlazerTech.CharacterManagement.Characters.LayeredCharacterTypeSO,System.String)
  id: '#ctor(BlazerTech.CharacterManagement.Characters.LayeredCharacterTypeSO,System.String)'
  parent: BlazerTech.CharacterManagement.Characters.SingleSlotCharacterGroup
  langs:
  - csharp
  - vb
  name: SingleSlotCharacterGroup(LayeredCharacterTypeSO, string)
  nameWithType: SingleSlotCharacterGroup.SingleSlotCharacterGroup(LayeredCharacterTypeSO, string)
  fullName: BlazerTech.CharacterManagement.Characters.SingleSlotCharacterGroup.SingleSlotCharacterGroup(BlazerTech.CharacterManagement.Characters.LayeredCharacterTypeSO, string)
  type: Constructor
  source:
    remote:
      path: Assets/BlazerTech Character Management System/Scripts/Core/Characters/Layered Characters/Character Groups/CharacterGroupDefinitions.cs
      branch: main
      repo: https://github.com/Legendaryswordsman2/BlazerTech-Character-Management-System.git
    id: .ctor
    path: ../../../Unity/Unity Projects/BlazerTech Character Management System/Assets/BlazerTech Character Management System/Scripts/Core/Characters/Layered Characters/Character Groups/CharacterGroupDefinitions.cs
    startLine: 36
  assemblies:
  - Assembly-CSharp
  namespace: BlazerTech.CharacterManagement.Characters
  syntax:
    content: public SingleSlotCharacterGroup(LayeredCharacterTypeSO characterType, string groupName = "Single")
    parameters:
    - id: characterType
      type: BlazerTech.CharacterManagement.Characters.LayeredCharacterTypeSO
    - id: groupName
      type: System.String
    content.vb: Public Sub New(characterType As LayeredCharacterTypeSO, groupName As String = "Single")
  overload: BlazerTech.CharacterManagement.Characters.SingleSlotCharacterGroup.#ctor*
  nameWithType.vb: SingleSlotCharacterGroup.New(LayeredCharacterTypeSO, String)
  fullName.vb: BlazerTech.CharacterManagement.Characters.SingleSlotCharacterGroup.New(BlazerTech.CharacterManagement.Characters.LayeredCharacterTypeSO, String)
  name.vb: New(LayeredCharacterTypeSO, String)
- uid: BlazerTech.CharacterManagement.Characters.SingleSlotCharacterGroup.#ctor(BlazerTech.CharacterManagement.Characters.SingleSlotCharacterGroup.SingleSlotCharacterGroup_DTO,BlazerTech.CharacterManagement.Characters.LayeredCharacterTypeSO)
  commentId: M:BlazerTech.CharacterManagement.Characters.SingleSlotCharacterGroup.#ctor(BlazerTech.CharacterManagement.Characters.SingleSlotCharacterGroup.SingleSlotCharacterGroup_DTO,BlazerTech.CharacterManagement.Characters.LayeredCharacterTypeSO)
  id: '#ctor(BlazerTech.CharacterManagement.Characters.SingleSlotCharacterGroup.SingleSlotCharacterGroup_DTO,BlazerTech.CharacterManagement.Characters.LayeredCharacterTypeSO)'
  parent: BlazerTech.CharacterManagement.Characters.SingleSlotCharacterGroup
  langs:
  - csharp
  - vb
  name: SingleSlotCharacterGroup(SingleSlotCharacterGroup_DTO, LayeredCharacterTypeSO)
  nameWithType: SingleSlotCharacterGroup.SingleSlotCharacterGroup(SingleSlotCharacterGroup.SingleSlotCharacterGroup_DTO, LayeredCharacterTypeSO)
  fullName: BlazerTech.CharacterManagement.Characters.SingleSlotCharacterGroup.SingleSlotCharacterGroup(BlazerTech.CharacterManagement.Characters.SingleSlotCharacterGroup.SingleSlotCharacterGroup_DTO, BlazerTech.CharacterManagement.Characters.LayeredCharacterTypeSO)
  type: Constructor
  source:
    remote:
      path: Assets/BlazerTech Character Management System/Scripts/Core/Characters/Layered Characters/Character Groups/CharacterGroupDefinitions.cs
      branch: main
      repo: https://github.com/Legendaryswordsman2/BlazerTech-Character-Management-System.git
    id: .ctor
    path: ../../../Unity/Unity Projects/BlazerTech Character Management System/Assets/BlazerTech Character Management System/Scripts/Core/Characters/Layered Characters/Character Groups/CharacterGroupDefinitions.cs
    startLine: 38
  assemblies:
  - Assembly-CSharp
  namespace: BlazerTech.CharacterManagement.Characters
  syntax:
    content: public SingleSlotCharacterGroup(SingleSlotCharacterGroup.SingleSlotCharacterGroup_DTO DTO, LayeredCharacterTypeSO characterType)
    parameters:
    - id: DTO
      type: BlazerTech.CharacterManagement.Characters.SingleSlotCharacterGroup.SingleSlotCharacterGroup_DTO
    - id: characterType
      type: BlazerTech.CharacterManagement.Characters.LayeredCharacterTypeSO
    content.vb: Public Sub New(DTO As SingleSlotCharacterGroup.SingleSlotCharacterGroup_DTO, characterType As LayeredCharacterTypeSO)
  overload: BlazerTech.CharacterManagement.Characters.SingleSlotCharacterGroup.#ctor*
  nameWithType.vb: SingleSlotCharacterGroup.New(SingleSlotCharacterGroup.SingleSlotCharacterGroup_DTO, LayeredCharacterTypeSO)
  fullName.vb: BlazerTech.CharacterManagement.Characters.SingleSlotCharacterGroup.New(BlazerTech.CharacterManagement.Characters.SingleSlotCharacterGroup.SingleSlotCharacterGroup_DTO, BlazerTech.CharacterManagement.Characters.LayeredCharacterTypeSO)
  name.vb: New(SingleSlotCharacterGroup_DTO, LayeredCharacterTypeSO)
- uid: BlazerTech.CharacterManagement.Characters.SingleSlotCharacterGroup.AddCharacter(BlazerTech.CharacterManagement.Characters.LayeredCharacter)
  commentId: M:BlazerTech.CharacterManagement.Characters.SingleSlotCharacterGroup.AddCharacter(BlazerTech.CharacterManagement.Characters.LayeredCharacter)
  id: AddCharacter(BlazerTech.CharacterManagement.Characters.LayeredCharacter)
  parent: BlazerTech.CharacterManagement.Characters.SingleSlotCharacterGroup
  langs:
  - csharp
  - vb
  name: AddCharacter(LayeredCharacter)
  nameWithType: SingleSlotCharacterGroup.AddCharacter(LayeredCharacter)
  fullName: BlazerTech.CharacterManagement.Characters.SingleSlotCharacterGroup.AddCharacter(BlazerTech.CharacterManagement.Characters.LayeredCharacter)
  type: Method
  source:
    remote:
      path: Assets/BlazerTech Character Management System/Scripts/Core/Characters/Layered Characters/Character Groups/CharacterGroupDefinitions.cs
      branch: main
      repo: https://github.com/Legendaryswordsman2/BlazerTech-Character-Management-System.git
    id: AddCharacter
    path: ../../../Unity/Unity Projects/BlazerTech Character Management System/Assets/BlazerTech Character Management System/Scripts/Core/Characters/Layered Characters/Character Groups/CharacterGroupDefinitions.cs
    startLine: 51
  assemblies:
  - Assembly-CSharp
  namespace: BlazerTech.CharacterManagement.Characters
  summary: Set or replace the character in the Single Group.
  example: []
  syntax:
    content: public override bool AddCharacter(LayeredCharacter character)
    parameters:
    - id: character
      type: BlazerTech.CharacterManagement.Characters.LayeredCharacter
      description: ''
    return:
      type: System.Boolean
      description: True if the new character is successfully added/replaced. False if the new character is null.
    content.vb: Public Overrides Function AddCharacter(character As LayeredCharacter) As Boolean
  overridden: BlazerTech.CharacterManagement.Characters.CharacterGroupBase.AddCharacter(BlazerTech.CharacterManagement.Characters.LayeredCharacter)
  overload: BlazerTech.CharacterManagement.Characters.SingleSlotCharacterGroup.AddCharacter*
- uid: BlazerTech.CharacterManagement.Characters.SingleSlotCharacterGroup.RemoveCharacter
  commentId: M:BlazerTech.CharacterManagement.Characters.SingleSlotCharacterGroup.RemoveCharacter
  id: RemoveCharacter
  parent: BlazerTech.CharacterManagement.Characters.SingleSlotCharacterGroup
  langs:
  - csharp
  - vb
  name: RemoveCharacter()
  nameWithType: SingleSlotCharacterGroup.RemoveCharacter()
  fullName: BlazerTech.CharacterManagement.Characters.SingleSlotCharacterGroup.RemoveCharacter()
  type: Method
  source:
    remote:
      path: Assets/BlazerTech Character Management System/Scripts/Core/Characters/Layered Characters/Character Groups/CharacterGroupDefinitions.cs
      branch: main
      repo: https://github.com/Legendaryswordsman2/BlazerTech-Character-Management-System.git
    id: RemoveCharacter
    path: ../../../Unity/Unity Projects/BlazerTech Character Management System/Assets/BlazerTech Character Management System/Scripts/Core/Characters/Layered Characters/Character Groups/CharacterGroupDefinitions.cs
    startLine: 70
  assemblies:
  - Assembly-CSharp
  namespace: BlazerTech.CharacterManagement.Characters
  summary: Remove the singlular character in the group if there is one.
  example: []
  syntax:
    content: public bool RemoveCharacter()
    return:
      type: System.Boolean
      description: True if there was a character in the group to remove. Otherwise False.
    content.vb: Public Function RemoveCharacter() As Boolean
  overload: BlazerTech.CharacterManagement.Characters.SingleSlotCharacterGroup.RemoveCharacter*
- uid: BlazerTech.CharacterManagement.Characters.SingleSlotCharacterGroup.ContainsCharacter(BlazerTech.CharacterManagement.Characters.LayeredCharacter)
  commentId: M:BlazerTech.CharacterManagement.Characters.SingleSlotCharacterGroup.ContainsCharacter(BlazerTech.CharacterManagement.Characters.LayeredCharacter)
  id: ContainsCharacter(BlazerTech.CharacterManagement.Characters.LayeredCharacter)
  parent: BlazerTech.CharacterManagement.Characters.SingleSlotCharacterGroup
  langs:
  - csharp
  - vb
  name: ContainsCharacter(LayeredCharacter)
  nameWithType: SingleSlotCharacterGroup.ContainsCharacter(LayeredCharacter)
  fullName: BlazerTech.CharacterManagement.Characters.SingleSlotCharacterGroup.ContainsCharacter(BlazerTech.CharacterManagement.Characters.LayeredCharacter)
  type: Method
  source:
    remote:
      path: Assets/BlazerTech Character Management System/Scripts/Core/Characters/Layered Characters/Character Groups/CharacterGroupDefinitions.cs
      branch: main
      repo: https://github.com/Legendaryswordsman2/BlazerTech-Character-Management-System.git
    id: ContainsCharacter
    path: ../../../Unity/Unity Projects/BlazerTech Character Management System/Assets/BlazerTech Character Management System/Scripts/Core/Characters/Layered Characters/Character Groups/CharacterGroupDefinitions.cs
    startLine: 77
  assemblies:
  - Assembly-CSharp
  namespace: BlazerTech.CharacterManagement.Characters
  example: []
  syntax:
    content: public override bool ContainsCharacter(LayeredCharacter character)
    parameters:
    - id: character
      type: BlazerTech.CharacterManagement.Characters.LayeredCharacter
    return:
      type: System.Boolean
    content.vb: Public Overrides Function ContainsCharacter(character As LayeredCharacter) As Boolean
  overridden: BlazerTech.CharacterManagement.Characters.CharacterGroupBase.ContainsCharacter(BlazerTech.CharacterManagement.Characters.LayeredCharacter)
  overload: BlazerTech.CharacterManagement.Characters.SingleSlotCharacterGroup.ContainsCharacter*
- uid: BlazerTech.CharacterManagement.Characters.SingleSlotCharacterGroup.ContainsCharacterWithGUID(System.Guid)
  commentId: M:BlazerTech.CharacterManagement.Characters.SingleSlotCharacterGroup.ContainsCharacterWithGUID(System.Guid)
  id: ContainsCharacterWithGUID(System.Guid)
  parent: BlazerTech.CharacterManagement.Characters.SingleSlotCharacterGroup
  langs:
  - csharp
  - vb
  name: ContainsCharacterWithGUID(Guid)
  nameWithType: SingleSlotCharacterGroup.ContainsCharacterWithGUID(Guid)
  fullName: BlazerTech.CharacterManagement.Characters.SingleSlotCharacterGroup.ContainsCharacterWithGUID(System.Guid)
  type: Method
  source:
    remote:
      path: Assets/BlazerTech Character Management System/Scripts/Core/Characters/Layered Characters/Character Groups/CharacterGroupDefinitions.cs
      branch: main
      repo: https://github.com/Legendaryswordsman2/BlazerTech-Character-Management-System.git
    id: ContainsCharacterWithGUID
    path: ../../../Unity/Unity Projects/BlazerTech Character Management System/Assets/BlazerTech Character Management System/Scripts/Core/Characters/Layered Characters/Character Groups/CharacterGroupDefinitions.cs
    startLine: 78
  assemblies:
  - Assembly-CSharp
  namespace: BlazerTech.CharacterManagement.Characters
  example: []
  syntax:
    content: public override bool ContainsCharacterWithGUID(Guid guid)
    parameters:
    - id: guid
      type: System.Guid
    return:
      type: System.Boolean
    content.vb: Public Overrides Function ContainsCharacterWithGUID(guid As Guid) As Boolean
  overridden: BlazerTech.CharacterManagement.Characters.CharacterGroupBase.ContainsCharacterWithGUID(System.Guid)
  overload: BlazerTech.CharacterManagement.Characters.SingleSlotCharacterGroup.ContainsCharacterWithGUID*
- uid: BlazerTech.CharacterManagement.Characters.SingleSlotCharacterGroup.ContainsCharacterWithName(System.String)
  commentId: M:BlazerTech.CharacterManagement.Characters.SingleSlotCharacterGroup.ContainsCharacterWithName(System.String)
  id: ContainsCharacterWithName(System.String)
  parent: BlazerTech.CharacterManagement.Characters.SingleSlotCharacterGroup
  langs:
  - csharp
  - vb
  name: ContainsCharacterWithName(string)
  nameWithType: SingleSlotCharacterGroup.ContainsCharacterWithName(string)
  fullName: BlazerTech.CharacterManagement.Characters.SingleSlotCharacterGroup.ContainsCharacterWithName(string)
  type: Method
  source:
    remote:
      path: Assets/BlazerTech Character Management System/Scripts/Core/Characters/Layered Characters/Character Groups/CharacterGroupDefinitions.cs
      branch: main
      repo: https://github.com/Legendaryswordsman2/BlazerTech-Character-Management-System.git
    id: ContainsCharacterWithName
    path: ../../../Unity/Unity Projects/BlazerTech Character Management System/Assets/BlazerTech Character Management System/Scripts/Core/Characters/Layered Characters/Character Groups/CharacterGroupDefinitions.cs
    startLine: 79
  assemblies:
  - Assembly-CSharp
  namespace: BlazerTech.CharacterManagement.Characters
  example: []
  syntax:
    content: public override bool ContainsCharacterWithName(string name)
    parameters:
    - id: name
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Overrides Function ContainsCharacterWithName(name As String) As Boolean
  overridden: BlazerTech.CharacterManagement.Characters.CharacterGroupBase.ContainsCharacterWithName(System.String)
  overload: BlazerTech.CharacterManagement.Characters.SingleSlotCharacterGroup.ContainsCharacterWithName*
  nameWithType.vb: SingleSlotCharacterGroup.ContainsCharacterWithName(String)
  fullName.vb: BlazerTech.CharacterManagement.Characters.SingleSlotCharacterGroup.ContainsCharacterWithName(String)
  name.vb: ContainsCharacterWithName(String)
references:
- uid: BlazerTech.CharacterManagement.Characters
  commentId: N:BlazerTech.CharacterManagement.Characters
  href: BlazerTech.html
  name: BlazerTech.CharacterManagement.Characters
  nameWithType: BlazerTech.CharacterManagement.Characters
  fullName: BlazerTech.CharacterManagement.Characters
  spec.csharp:
  - uid: BlazerTech
    name: BlazerTech
    href: BlazerTech.html
  - name: .
  - uid: BlazerTech.CharacterManagement
    name: CharacterManagement
    href: BlazerTech.CharacterManagement.html
  - name: .
  - uid: BlazerTech.CharacterManagement.Characters
    name: Characters
    href: BlazerTech.CharacterManagement.Characters.html
  spec.vb:
  - uid: BlazerTech
    name: BlazerTech
    href: BlazerTech.html
  - name: .
  - uid: BlazerTech.CharacterManagement
    name: CharacterManagement
    href: BlazerTech.CharacterManagement.html
  - name: .
  - uid: BlazerTech.CharacterManagement.Characters
    name: Characters
    href: BlazerTech.CharacterManagement.Characters.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: BlazerTech.CharacterManagement.Characters.CharacterGroupBase
  commentId: T:BlazerTech.CharacterManagement.Characters.CharacterGroupBase
  parent: BlazerTech.CharacterManagement.Characters
  href: BlazerTech.CharacterManagement.Characters.CharacterGroupBase.html
  name: CharacterGroupBase
  nameWithType: CharacterGroupBase
  fullName: BlazerTech.CharacterManagement.Characters.CharacterGroupBase
- uid: BlazerTech.CharacterManagement.Characters.CharacterGroupBase.GroupName
  commentId: P:BlazerTech.CharacterManagement.Characters.CharacterGroupBase.GroupName
  parent: BlazerTech.CharacterManagement.Characters.CharacterGroupBase
  href: BlazerTech.CharacterManagement.Characters.CharacterGroupBase.html#BlazerTech_CharacterManagement_Characters_CharacterGroupBase_GroupName
  name: GroupName
  nameWithType: CharacterGroupBase.GroupName
  fullName: BlazerTech.CharacterManagement.Characters.CharacterGroupBase.GroupName
- uid: BlazerTech.CharacterManagement.Characters.CharacterGroupBase.CharacterType
  commentId: F:BlazerTech.CharacterManagement.Characters.CharacterGroupBase.CharacterType
  parent: BlazerTech.CharacterManagement.Characters.CharacterGroupBase
  href: BlazerTech.CharacterManagement.Characters.CharacterGroupBase.html#BlazerTech_CharacterManagement_Characters_CharacterGroupBase_CharacterType
  name: CharacterType
  nameWithType: CharacterGroupBase.CharacterType
  fullName: BlazerTech.CharacterManagement.Characters.CharacterGroupBase.CharacterType
- uid: BlazerTech.CharacterManagement.Characters.CharacterGroupBase.OnCharacterChanged
  commentId: E:BlazerTech.CharacterManagement.Characters.CharacterGroupBase.OnCharacterChanged
  parent: BlazerTech.CharacterManagement.Characters.CharacterGroupBase
  href: BlazerTech.CharacterManagement.Characters.CharacterGroupBase.html#BlazerTech_CharacterManagement_Characters_CharacterGroupBase_OnCharacterChanged
  name: OnCharacterChanged
  nameWithType: CharacterGroupBase.OnCharacterChanged
  fullName: BlazerTech.CharacterManagement.Characters.CharacterGroupBase.OnCharacterChanged
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: BlazerTech.CharacterManagement.Characters.SingleSlotCharacterGroup.Character*
  commentId: Overload:BlazerTech.CharacterManagement.Characters.SingleSlotCharacterGroup.Character
  href: BlazerTech.CharacterManagement.Characters.SingleSlotCharacterGroup.html#BlazerTech_CharacterManagement_Characters_SingleSlotCharacterGroup_Character
  name: Character
  nameWithType: SingleSlotCharacterGroup.Character
  fullName: BlazerTech.CharacterManagement.Characters.SingleSlotCharacterGroup.Character
- uid: BlazerTech.CharacterManagement.Characters.LayeredCharacter
  commentId: T:BlazerTech.CharacterManagement.Characters.LayeredCharacter
  parent: BlazerTech.CharacterManagement.Characters
  href: BlazerTech.CharacterManagement.Characters.LayeredCharacter.html
  name: LayeredCharacter
  nameWithType: LayeredCharacter
  fullName: BlazerTech.CharacterManagement.Characters.LayeredCharacter
- uid: BlazerTech.CharacterManagement.Characters.SingleSlotCharacterGroup.#ctor*
  commentId: Overload:BlazerTech.CharacterManagement.Characters.SingleSlotCharacterGroup.#ctor
  href: BlazerTech.CharacterManagement.Characters.SingleSlotCharacterGroup.html#BlazerTech_CharacterManagement_Characters_SingleSlotCharacterGroup__ctor_BlazerTech_CharacterManagement_Characters_LayeredCharacterTypeSO_System_String_
  name: SingleSlotCharacterGroup
  nameWithType: SingleSlotCharacterGroup.SingleSlotCharacterGroup
  fullName: BlazerTech.CharacterManagement.Characters.SingleSlotCharacterGroup.SingleSlotCharacterGroup
  nameWithType.vb: SingleSlotCharacterGroup.New
  fullName.vb: BlazerTech.CharacterManagement.Characters.SingleSlotCharacterGroup.New
  name.vb: New
- uid: BlazerTech.CharacterManagement.Characters.LayeredCharacterTypeSO
  commentId: T:BlazerTech.CharacterManagement.Characters.LayeredCharacterTypeSO
  parent: BlazerTech.CharacterManagement.Characters
  href: BlazerTech.CharacterManagement.Characters.LayeredCharacterTypeSO.html
  name: LayeredCharacterTypeSO
  nameWithType: LayeredCharacterTypeSO
  fullName: BlazerTech.CharacterManagement.Characters.LayeredCharacterTypeSO
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: BlazerTech.CharacterManagement.Characters.SingleSlotCharacterGroup.SingleSlotCharacterGroup_DTO
  commentId: T:BlazerTech.CharacterManagement.Characters.SingleSlotCharacterGroup.SingleSlotCharacterGroup_DTO
  parent: BlazerTech.CharacterManagement.Characters
  href: BlazerTech.CharacterManagement.Characters.SingleSlotCharacterGroup.html
  name: SingleSlotCharacterGroup.SingleSlotCharacterGroup_DTO
  nameWithType: SingleSlotCharacterGroup.SingleSlotCharacterGroup_DTO
  fullName: BlazerTech.CharacterManagement.Characters.SingleSlotCharacterGroup.SingleSlotCharacterGroup_DTO
  spec.csharp:
  - uid: BlazerTech.CharacterManagement.Characters.SingleSlotCharacterGroup
    name: SingleSlotCharacterGroup
    href: BlazerTech.CharacterManagement.Characters.SingleSlotCharacterGroup.html
  - name: .
  - uid: BlazerTech.CharacterManagement.Characters.SingleSlotCharacterGroup.SingleSlotCharacterGroup_DTO
    name: SingleSlotCharacterGroup_DTO
    href: BlazerTech.CharacterManagement.Characters.SingleSlotCharacterGroup.SingleSlotCharacterGroup_DTO.html
  spec.vb:
  - uid: BlazerTech.CharacterManagement.Characters.SingleSlotCharacterGroup
    name: SingleSlotCharacterGroup
    href: BlazerTech.CharacterManagement.Characters.SingleSlotCharacterGroup.html
  - name: .
  - uid: BlazerTech.CharacterManagement.Characters.SingleSlotCharacterGroup.SingleSlotCharacterGroup_DTO
    name: SingleSlotCharacterGroup_DTO
    href: BlazerTech.CharacterManagement.Characters.SingleSlotCharacterGroup.SingleSlotCharacterGroup_DTO.html
- uid: BlazerTech.CharacterManagement.Characters.CharacterGroupBase.AddCharacter(BlazerTech.CharacterManagement.Characters.LayeredCharacter)
  commentId: M:BlazerTech.CharacterManagement.Characters.CharacterGroupBase.AddCharacter(BlazerTech.CharacterManagement.Characters.LayeredCharacter)
  parent: BlazerTech.CharacterManagement.Characters.CharacterGroupBase
  href: BlazerTech.CharacterManagement.Characters.CharacterGroupBase.html#BlazerTech_CharacterManagement_Characters_CharacterGroupBase_AddCharacter_BlazerTech_CharacterManagement_Characters_LayeredCharacter_
  name: AddCharacter(LayeredCharacter)
  nameWithType: CharacterGroupBase.AddCharacter(LayeredCharacter)
  fullName: BlazerTech.CharacterManagement.Characters.CharacterGroupBase.AddCharacter(BlazerTech.CharacterManagement.Characters.LayeredCharacter)
  spec.csharp:
  - uid: BlazerTech.CharacterManagement.Characters.CharacterGroupBase.AddCharacter(BlazerTech.CharacterManagement.Characters.LayeredCharacter)
    name: AddCharacter
    href: BlazerTech.CharacterManagement.Characters.CharacterGroupBase.html#BlazerTech_CharacterManagement_Characters_CharacterGroupBase_AddCharacter_BlazerTech_CharacterManagement_Characters_LayeredCharacter_
  - name: (
  - uid: BlazerTech.CharacterManagement.Characters.LayeredCharacter
    name: LayeredCharacter
    href: BlazerTech.CharacterManagement.Characters.LayeredCharacter.html
  - name: )
  spec.vb:
  - uid: BlazerTech.CharacterManagement.Characters.CharacterGroupBase.AddCharacter(BlazerTech.CharacterManagement.Characters.LayeredCharacter)
    name: AddCharacter
    href: BlazerTech.CharacterManagement.Characters.CharacterGroupBase.html#BlazerTech_CharacterManagement_Characters_CharacterGroupBase_AddCharacter_BlazerTech_CharacterManagement_Characters_LayeredCharacter_
  - name: (
  - uid: BlazerTech.CharacterManagement.Characters.LayeredCharacter
    name: LayeredCharacter
    href: BlazerTech.CharacterManagement.Characters.LayeredCharacter.html
  - name: )
- uid: BlazerTech.CharacterManagement.Characters.SingleSlotCharacterGroup.AddCharacter*
  commentId: Overload:BlazerTech.CharacterManagement.Characters.SingleSlotCharacterGroup.AddCharacter
  href: BlazerTech.CharacterManagement.Characters.SingleSlotCharacterGroup.html#BlazerTech_CharacterManagement_Characters_SingleSlotCharacterGroup_AddCharacter_BlazerTech_CharacterManagement_Characters_LayeredCharacter_
  name: AddCharacter
  nameWithType: SingleSlotCharacterGroup.AddCharacter
  fullName: BlazerTech.CharacterManagement.Characters.SingleSlotCharacterGroup.AddCharacter
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: BlazerTech.CharacterManagement.Characters.SingleSlotCharacterGroup.RemoveCharacter*
  commentId: Overload:BlazerTech.CharacterManagement.Characters.SingleSlotCharacterGroup.RemoveCharacter
  href: BlazerTech.CharacterManagement.Characters.SingleSlotCharacterGroup.html#BlazerTech_CharacterManagement_Characters_SingleSlotCharacterGroup_RemoveCharacter
  name: RemoveCharacter
  nameWithType: SingleSlotCharacterGroup.RemoveCharacter
  fullName: BlazerTech.CharacterManagement.Characters.SingleSlotCharacterGroup.RemoveCharacter
- uid: BlazerTech.CharacterManagement.Characters.CharacterGroupBase.ContainsCharacter(BlazerTech.CharacterManagement.Characters.LayeredCharacter)
  commentId: M:BlazerTech.CharacterManagement.Characters.CharacterGroupBase.ContainsCharacter(BlazerTech.CharacterManagement.Characters.LayeredCharacter)
  parent: BlazerTech.CharacterManagement.Characters.CharacterGroupBase
  href: BlazerTech.CharacterManagement.Characters.CharacterGroupBase.html#BlazerTech_CharacterManagement_Characters_CharacterGroupBase_ContainsCharacter_BlazerTech_CharacterManagement_Characters_LayeredCharacter_
  name: ContainsCharacter(LayeredCharacter)
  nameWithType: CharacterGroupBase.ContainsCharacter(LayeredCharacter)
  fullName: BlazerTech.CharacterManagement.Characters.CharacterGroupBase.ContainsCharacter(BlazerTech.CharacterManagement.Characters.LayeredCharacter)
  spec.csharp:
  - uid: BlazerTech.CharacterManagement.Characters.CharacterGroupBase.ContainsCharacter(BlazerTech.CharacterManagement.Characters.LayeredCharacter)
    name: ContainsCharacter
    href: BlazerTech.CharacterManagement.Characters.CharacterGroupBase.html#BlazerTech_CharacterManagement_Characters_CharacterGroupBase_ContainsCharacter_BlazerTech_CharacterManagement_Characters_LayeredCharacter_
  - name: (
  - uid: BlazerTech.CharacterManagement.Characters.LayeredCharacter
    name: LayeredCharacter
    href: BlazerTech.CharacterManagement.Characters.LayeredCharacter.html
  - name: )
  spec.vb:
  - uid: BlazerTech.CharacterManagement.Characters.CharacterGroupBase.ContainsCharacter(BlazerTech.CharacterManagement.Characters.LayeredCharacter)
    name: ContainsCharacter
    href: BlazerTech.CharacterManagement.Characters.CharacterGroupBase.html#BlazerTech_CharacterManagement_Characters_CharacterGroupBase_ContainsCharacter_BlazerTech_CharacterManagement_Characters_LayeredCharacter_
  - name: (
  - uid: BlazerTech.CharacterManagement.Characters.LayeredCharacter
    name: LayeredCharacter
    href: BlazerTech.CharacterManagement.Characters.LayeredCharacter.html
  - name: )
- uid: BlazerTech.CharacterManagement.Characters.SingleSlotCharacterGroup.ContainsCharacter*
  commentId: Overload:BlazerTech.CharacterManagement.Characters.SingleSlotCharacterGroup.ContainsCharacter
  href: BlazerTech.CharacterManagement.Characters.SingleSlotCharacterGroup.html#BlazerTech_CharacterManagement_Characters_SingleSlotCharacterGroup_ContainsCharacter_BlazerTech_CharacterManagement_Characters_LayeredCharacter_
  name: ContainsCharacter
  nameWithType: SingleSlotCharacterGroup.ContainsCharacter
  fullName: BlazerTech.CharacterManagement.Characters.SingleSlotCharacterGroup.ContainsCharacter
- uid: BlazerTech.CharacterManagement.Characters.CharacterGroupBase.ContainsCharacterWithGUID(System.Guid)
  commentId: M:BlazerTech.CharacterManagement.Characters.CharacterGroupBase.ContainsCharacterWithGUID(System.Guid)
  parent: BlazerTech.CharacterManagement.Characters.CharacterGroupBase
  isExternal: true
  href: BlazerTech.CharacterManagement.Characters.CharacterGroupBase.html#BlazerTech_CharacterManagement_Characters_CharacterGroupBase_ContainsCharacterWithGUID_System_Guid_
  name: ContainsCharacterWithGUID(Guid)
  nameWithType: CharacterGroupBase.ContainsCharacterWithGUID(Guid)
  fullName: BlazerTech.CharacterManagement.Characters.CharacterGroupBase.ContainsCharacterWithGUID(System.Guid)
  spec.csharp:
  - uid: BlazerTech.CharacterManagement.Characters.CharacterGroupBase.ContainsCharacterWithGUID(System.Guid)
    name: ContainsCharacterWithGUID
    href: BlazerTech.CharacterManagement.Characters.CharacterGroupBase.html#BlazerTech_CharacterManagement_Characters_CharacterGroupBase_ContainsCharacterWithGUID_System_Guid_
  - name: (
  - uid: System.Guid
    name: Guid
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.guid
  - name: )
  spec.vb:
  - uid: BlazerTech.CharacterManagement.Characters.CharacterGroupBase.ContainsCharacterWithGUID(System.Guid)
    name: ContainsCharacterWithGUID
    href: BlazerTech.CharacterManagement.Characters.CharacterGroupBase.html#BlazerTech_CharacterManagement_Characters_CharacterGroupBase_ContainsCharacterWithGUID_System_Guid_
  - name: (
  - uid: System.Guid
    name: Guid
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.guid
  - name: )
- uid: BlazerTech.CharacterManagement.Characters.SingleSlotCharacterGroup.ContainsCharacterWithGUID*
  commentId: Overload:BlazerTech.CharacterManagement.Characters.SingleSlotCharacterGroup.ContainsCharacterWithGUID
  href: BlazerTech.CharacterManagement.Characters.SingleSlotCharacterGroup.html#BlazerTech_CharacterManagement_Characters_SingleSlotCharacterGroup_ContainsCharacterWithGUID_System_Guid_
  name: ContainsCharacterWithGUID
  nameWithType: SingleSlotCharacterGroup.ContainsCharacterWithGUID
  fullName: BlazerTech.CharacterManagement.Characters.SingleSlotCharacterGroup.ContainsCharacterWithGUID
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.guid
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: BlazerTech.CharacterManagement.Characters.CharacterGroupBase.ContainsCharacterWithName(System.String)
  commentId: M:BlazerTech.CharacterManagement.Characters.CharacterGroupBase.ContainsCharacterWithName(System.String)
  parent: BlazerTech.CharacterManagement.Characters.CharacterGroupBase
  isExternal: true
  href: BlazerTech.CharacterManagement.Characters.CharacterGroupBase.html#BlazerTech_CharacterManagement_Characters_CharacterGroupBase_ContainsCharacterWithName_System_String_
  name: ContainsCharacterWithName(string)
  nameWithType: CharacterGroupBase.ContainsCharacterWithName(string)
  fullName: BlazerTech.CharacterManagement.Characters.CharacterGroupBase.ContainsCharacterWithName(string)
  nameWithType.vb: CharacterGroupBase.ContainsCharacterWithName(String)
  fullName.vb: BlazerTech.CharacterManagement.Characters.CharacterGroupBase.ContainsCharacterWithName(String)
  name.vb: ContainsCharacterWithName(String)
  spec.csharp:
  - uid: BlazerTech.CharacterManagement.Characters.CharacterGroupBase.ContainsCharacterWithName(System.String)
    name: ContainsCharacterWithName
    href: BlazerTech.CharacterManagement.Characters.CharacterGroupBase.html#BlazerTech_CharacterManagement_Characters_CharacterGroupBase_ContainsCharacterWithName_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: BlazerTech.CharacterManagement.Characters.CharacterGroupBase.ContainsCharacterWithName(System.String)
    name: ContainsCharacterWithName
    href: BlazerTech.CharacterManagement.Characters.CharacterGroupBase.html#BlazerTech_CharacterManagement_Characters_CharacterGroupBase_ContainsCharacterWithName_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: BlazerTech.CharacterManagement.Characters.SingleSlotCharacterGroup.ContainsCharacterWithName*
  commentId: Overload:BlazerTech.CharacterManagement.Characters.SingleSlotCharacterGroup.ContainsCharacterWithName
  href: BlazerTech.CharacterManagement.Characters.SingleSlotCharacterGroup.html#BlazerTech_CharacterManagement_Characters_SingleSlotCharacterGroup_ContainsCharacterWithName_System_String_
  name: ContainsCharacterWithName
  nameWithType: SingleSlotCharacterGroup.ContainsCharacterWithName
  fullName: BlazerTech.CharacterManagement.Characters.SingleSlotCharacterGroup.ContainsCharacterWithName
