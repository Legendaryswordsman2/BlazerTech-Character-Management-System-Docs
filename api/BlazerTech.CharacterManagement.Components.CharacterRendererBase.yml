### YamlMime:ManagedReference
items:
- uid: BlazerTech.CharacterManagement.Components.CharacterRendererBase
  commentId: T:BlazerTech.CharacterManagement.Components.CharacterRendererBase
  id: CharacterRendererBase
  parent: BlazerTech.CharacterManagement.Components
  children:
  - BlazerTech.CharacterManagement.Components.CharacterRendererBase.GetAndShowCharacter
  - BlazerTech.CharacterManagement.Components.CharacterRendererBase.OnDestroy
  - BlazerTech.CharacterManagement.Components.CharacterRendererBase.ReleaseCharacter
  - BlazerTech.CharacterManagement.Components.CharacterRendererBase.ShowCharacter
  - BlazerTech.CharacterManagement.Components.CharacterRendererBase.TrySetCharacterAnimator(BlazerTech.CharacterManagement.Characters.CharacterTypeBaseSO)
  - BlazerTech.CharacterManagement.Components.CharacterRendererBase.ValidationCheck
  - BlazerTech.CharacterManagement.Components.CharacterRendererBase._animator
  - BlazerTech.CharacterManagement.Components.CharacterRendererBase._renderer
  - BlazerTech.CharacterManagement.Components.CharacterRendererBase.isValid
  - BlazerTech.CharacterManagement.Components.CharacterRendererBase.loadCharacterOnStart
  - BlazerTech.CharacterManagement.Components.CharacterRendererBase.loadingMode
  - BlazerTech.CharacterManagement.Components.CharacterRendererBase.setAnimatorController
  langs:
  - csharp
  - vb
  name: CharacterRendererBase
  nameWithType: CharacterRendererBase
  fullName: BlazerTech.CharacterManagement.Components.CharacterRendererBase
  type: Class
  source:
    remote:
      path: Assets/BT-CMS/Scripts/Usage Scripts/Character Renderers/CharacterRendererBase.cs
      branch: main
      repo: https://github.com/Legendaryswordsman2/BlazerTech-Character-Management-System.git
    id: CharacterRendererBase
    path: ../../../Unity/Unity Projects/BlazerTech Character Management System/Assets/BT-CMS/Scripts/Usage Scripts/Character Renderers/CharacterRendererBase.cs
    startLine: 7
  assemblies:
  - Assembly-CSharp
  namespace: BlazerTech.CharacterManagement.Components
  syntax:
    content: >-
      [DisallowMultipleComponent]

      public abstract class CharacterRendererBase : MonoBehaviour
    content.vb: >-
      <DisallowMultipleComponent>

      Public MustInherit Class CharacterRendererBase Inherits MonoBehaviour
  inheritance:
  - System.Object
  - UnityEngine.Object
  - UnityEngine.Component
  - UnityEngine.Behaviour
  - UnityEngine.MonoBehaviour
  derivedClasses:
  - BlazerTech.CharacterManagement.Components.LayeredCharacterGroupRenderer
  - BlazerTech.CharacterManagement.Components.LayeredCharacterTemplateRenderer
  - BlazerTech.CharacterManagement.Components.UnifiedCharacterTemplateRenderer
  attributes:
  - type: UnityEngine.DisallowMultipleComponent
    ctor: UnityEngine.DisallowMultipleComponent.#ctor
    arguments: []
- uid: BlazerTech.CharacterManagement.Components.CharacterRendererBase._renderer
  commentId: F:BlazerTech.CharacterManagement.Components.CharacterRendererBase._renderer
  id: _renderer
  parent: BlazerTech.CharacterManagement.Components.CharacterRendererBase
  langs:
  - csharp
  - vb
  name: _renderer
  nameWithType: CharacterRendererBase._renderer
  fullName: BlazerTech.CharacterManagement.Components.CharacterRendererBase._renderer
  type: Field
  source:
    remote:
      path: Assets/BT-CMS/Scripts/Usage Scripts/Character Renderers/CharacterRendererBase.cs
      branch: main
      repo: https://github.com/Legendaryswordsman2/BlazerTech-Character-Management-System.git
    id: _renderer
    path: ../../../Unity/Unity Projects/BlazerTech Character Management System/Assets/BT-CMS/Scripts/Usage Scripts/Character Renderers/CharacterRendererBase.cs
    startLine: 13
  assemblies:
  - Assembly-CSharp
  namespace: BlazerTech.CharacterManagement.Components
  summary: The Renderer to apply the character shader to.
  example: []
  syntax:
    content: >-
      [SerializeField]

      [BoxGroup("References")]

      protected Renderer _renderer
    return:
      type: UnityEngine.Renderer
    content.vb: >-
      <SerializeField>

      <BoxGroup("References")>

      Protected _renderer As Renderer
  attributes:
  - type: UnityEngine.SerializeField
    ctor: UnityEngine.SerializeField.#ctor
    arguments: []
  - type: NaughtyAttributes.BoxGroupAttribute
    ctor: NaughtyAttributes.BoxGroupAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: References
- uid: BlazerTech.CharacterManagement.Components.CharacterRendererBase.setAnimatorController
  commentId: F:BlazerTech.CharacterManagement.Components.CharacterRendererBase.setAnimatorController
  id: setAnimatorController
  parent: BlazerTech.CharacterManagement.Components.CharacterRendererBase
  langs:
  - csharp
  - vb
  name: setAnimatorController
  nameWithType: CharacterRendererBase.setAnimatorController
  fullName: BlazerTech.CharacterManagement.Components.CharacterRendererBase.setAnimatorController
  type: Field
  source:
    remote:
      path: Assets/BT-CMS/Scripts/Usage Scripts/Character Renderers/CharacterRendererBase.cs
      branch: main
      repo: https://github.com/Legendaryswordsman2/BlazerTech-Character-Management-System.git
    id: setAnimatorController
    path: ../../../Unity/Unity Projects/BlazerTech Character Management System/Assets/BT-CMS/Scripts/Usage Scripts/Character Renderers/CharacterRendererBase.cs
    startLine: 19
  assemblies:
  - Assembly-CSharp
  namespace: BlazerTech.CharacterManagement.Components
  summary: Toggles if the Animator Controller set in Character Type should be used.
  example: []
  syntax:
    content: >-
      [Tooltip("Override the animator controller with the one assigned in the Character Type")]

      [SerializeField]

      [BoxGroup("References")]

      protected bool setAnimatorController
    return:
      type: System.Boolean
    content.vb: >-
      <Tooltip("Override the animator controller with the one assigned in the Character Type")>

      <SerializeField>

      <BoxGroup("References")>

      Protected setAnimatorController As Boolean
  attributes:
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Override the animator controller with the one assigned in the Character Type
  - type: UnityEngine.SerializeField
    ctor: UnityEngine.SerializeField.#ctor
    arguments: []
  - type: NaughtyAttributes.BoxGroupAttribute
    ctor: NaughtyAttributes.BoxGroupAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: References
- uid: BlazerTech.CharacterManagement.Components.CharacterRendererBase._animator
  commentId: F:BlazerTech.CharacterManagement.Components.CharacterRendererBase._animator
  id: _animator
  parent: BlazerTech.CharacterManagement.Components.CharacterRendererBase
  langs:
  - csharp
  - vb
  name: _animator
  nameWithType: CharacterRendererBase._animator
  fullName: BlazerTech.CharacterManagement.Components.CharacterRendererBase._animator
  type: Field
  source:
    remote:
      path: Assets/BT-CMS/Scripts/Usage Scripts/Character Renderers/CharacterRendererBase.cs
      branch: main
      repo: https://github.com/Legendaryswordsman2/BlazerTech-Character-Management-System.git
    id: _animator
    path: ../../../Unity/Unity Projects/BlazerTech Character Management System/Assets/BT-CMS/Scripts/Usage Scripts/Character Renderers/CharacterRendererBase.cs
    startLine: 24
  assemblies:
  - Assembly-CSharp
  namespace: BlazerTech.CharacterManagement.Components
  summary: The Animator to apply the Animator Controller to
  example: []
  syntax:
    content: >-
      [SerializeField]

      [ShowIf("setAnimatorController")]

      [BoxGroup("References")]

      protected Animator _animator
    return:
      type: UnityEngine.Animator
    content.vb: >-
      <SerializeField>

      <ShowIf("setAnimatorController")>

      <BoxGroup("References")>

      Protected _animator As Animator
  attributes:
  - type: UnityEngine.SerializeField
    ctor: UnityEngine.SerializeField.#ctor
    arguments: []
  - type: NaughtyAttributes.ShowIfAttribute
    ctor: NaughtyAttributes.ShowIfAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: setAnimatorController
  - type: NaughtyAttributes.BoxGroupAttribute
    ctor: NaughtyAttributes.BoxGroupAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: References
- uid: BlazerTech.CharacterManagement.Components.CharacterRendererBase.loadingMode
  commentId: F:BlazerTech.CharacterManagement.Components.CharacterRendererBase.loadingMode
  id: loadingMode
  parent: BlazerTech.CharacterManagement.Components.CharacterRendererBase
  langs:
  - csharp
  - vb
  name: loadingMode
  nameWithType: CharacterRendererBase.loadingMode
  fullName: BlazerTech.CharacterManagement.Components.CharacterRendererBase.loadingMode
  type: Field
  source:
    remote:
      path: Assets/BT-CMS/Scripts/Usage Scripts/Character Renderers/CharacterRendererBase.cs
      branch: main
      repo: https://github.com/Legendaryswordsman2/BlazerTech-Character-Management-System.git
    id: loadingMode
    path: ../../../Unity/Unity Projects/BlazerTech Character Management System/Assets/BT-CMS/Scripts/Usage Scripts/Character Renderers/CharacterRendererBase.cs
    startLine: 29
  assemblies:
  - Assembly-CSharp
  namespace: BlazerTech.CharacterManagement.Components
  summary: Option to load character asynchronously or synchronously.
  example: []
  syntax:
    content: >-
      [SerializeField]

      [BoxGroup("Loading")]

      protected CharacterLoaderLoadingMode loadingMode
    return:
      type: BlazerTech.CharacterManagement.Components.CharacterLoaderLoadingMode
    content.vb: >-
      <SerializeField>

      <BoxGroup("Loading")>

      Protected loadingMode As CharacterLoaderLoadingMode
  attributes:
  - type: UnityEngine.SerializeField
    ctor: UnityEngine.SerializeField.#ctor
    arguments: []
  - type: NaughtyAttributes.BoxGroupAttribute
    ctor: NaughtyAttributes.BoxGroupAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Loading
- uid: BlazerTech.CharacterManagement.Components.CharacterRendererBase.loadCharacterOnStart
  commentId: F:BlazerTech.CharacterManagement.Components.CharacterRendererBase.loadCharacterOnStart
  id: loadCharacterOnStart
  parent: BlazerTech.CharacterManagement.Components.CharacterRendererBase
  langs:
  - csharp
  - vb
  name: loadCharacterOnStart
  nameWithType: CharacterRendererBase.loadCharacterOnStart
  fullName: BlazerTech.CharacterManagement.Components.CharacterRendererBase.loadCharacterOnStart
  type: Field
  source:
    remote:
      path: Assets/BT-CMS/Scripts/Usage Scripts/Character Renderers/CharacterRendererBase.cs
      branch: main
      repo: https://github.com/Legendaryswordsman2/BlazerTech-Character-Management-System.git
    id: loadCharacterOnStart
    path: ../../../Unity/Unity Projects/BlazerTech Character Management System/Assets/BT-CMS/Scripts/Usage Scripts/Character Renderers/CharacterRendererBase.cs
    startLine: 34
  assemblies:
  - Assembly-CSharp
  namespace: BlazerTech.CharacterManagement.Components
  summary: Toggles if the character should be loaded when the Start method is called.
  example: []
  syntax:
    content: >-
      [SerializeField]

      [BoxGroup("Loading")]

      protected bool loadCharacterOnStart
    return:
      type: System.Boolean
    content.vb: >-
      <SerializeField>

      <BoxGroup("Loading")>

      Protected loadCharacterOnStart As Boolean
  attributes:
  - type: UnityEngine.SerializeField
    ctor: UnityEngine.SerializeField.#ctor
    arguments: []
  - type: NaughtyAttributes.BoxGroupAttribute
    ctor: NaughtyAttributes.BoxGroupAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Loading
- uid: BlazerTech.CharacterManagement.Components.CharacterRendererBase.isValid
  commentId: F:BlazerTech.CharacterManagement.Components.CharacterRendererBase.isValid
  id: isValid
  parent: BlazerTech.CharacterManagement.Components.CharacterRendererBase
  langs:
  - csharp
  - vb
  name: isValid
  nameWithType: CharacterRendererBase.isValid
  fullName: BlazerTech.CharacterManagement.Components.CharacterRendererBase.isValid
  type: Field
  source:
    remote:
      path: Assets/BT-CMS/Scripts/Usage Scripts/Character Renderers/CharacterRendererBase.cs
      branch: main
      repo: https://github.com/Legendaryswordsman2/BlazerTech-Character-Management-System.git
    id: isValid
    path: ../../../Unity/Unity Projects/BlazerTech Character Management System/Assets/BT-CMS/Scripts/Usage Scripts/Character Renderers/CharacterRendererBase.cs
    startLine: 36
  assemblies:
  - Assembly-CSharp
  namespace: BlazerTech.CharacterManagement.Components
  syntax:
    content: protected bool isValid
    return:
      type: System.Boolean
    content.vb: Protected isValid As Boolean
- uid: BlazerTech.CharacterManagement.Components.CharacterRendererBase.ValidationCheck
  commentId: M:BlazerTech.CharacterManagement.Components.CharacterRendererBase.ValidationCheck
  id: ValidationCheck
  parent: BlazerTech.CharacterManagement.Components.CharacterRendererBase
  langs:
  - csharp
  - vb
  name: ValidationCheck()
  nameWithType: CharacterRendererBase.ValidationCheck()
  fullName: BlazerTech.CharacterManagement.Components.CharacterRendererBase.ValidationCheck()
  type: Method
  source:
    remote:
      path: Assets/BT-CMS/Scripts/Usage Scripts/Character Renderers/CharacterRendererBase.cs
      branch: main
      repo: https://github.com/Legendaryswordsman2/BlazerTech-Character-Management-System.git
    id: ValidationCheck
    path: ../../../Unity/Unity Projects/BlazerTech Character Management System/Assets/BT-CMS/Scripts/Usage Scripts/Character Renderers/CharacterRendererBase.cs
    startLine: 58
  assemblies:
  - Assembly-CSharp
  namespace: BlazerTech.CharacterManagement.Components
  syntax:
    content: protected virtual bool ValidationCheck()
    return:
      type: System.Boolean
    content.vb: Protected Overridable Function ValidationCheck() As Boolean
  overload: BlazerTech.CharacterManagement.Components.CharacterRendererBase.ValidationCheck*
- uid: BlazerTech.CharacterManagement.Components.CharacterRendererBase.GetAndShowCharacter
  commentId: M:BlazerTech.CharacterManagement.Components.CharacterRendererBase.GetAndShowCharacter
  id: GetAndShowCharacter
  parent: BlazerTech.CharacterManagement.Components.CharacterRendererBase
  langs:
  - csharp
  - vb
  name: GetAndShowCharacter()
  nameWithType: CharacterRendererBase.GetAndShowCharacter()
  fullName: BlazerTech.CharacterManagement.Components.CharacterRendererBase.GetAndShowCharacter()
  type: Method
  source:
    remote:
      path: Assets/BT-CMS/Scripts/Usage Scripts/Character Renderers/CharacterRendererBase.cs
      branch: main
      repo: https://github.com/Legendaryswordsman2/BlazerTech-Character-Management-System.git
    id: GetAndShowCharacter
    path: ../../../Unity/Unity Projects/BlazerTech Character Management System/Assets/BT-CMS/Scripts/Usage Scripts/Character Renderers/CharacterRendererBase.cs
    startLine: 69
  assemblies:
  - Assembly-CSharp
  namespace: BlazerTech.CharacterManagement.Components
  syntax:
    content: public abstract Task GetAndShowCharacter()
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public MustOverride Function GetAndShowCharacter() As Task
  overload: BlazerTech.CharacterManagement.Components.CharacterRendererBase.GetAndShowCharacter*
- uid: BlazerTech.CharacterManagement.Components.CharacterRendererBase.ShowCharacter
  commentId: M:BlazerTech.CharacterManagement.Components.CharacterRendererBase.ShowCharacter
  id: ShowCharacter
  parent: BlazerTech.CharacterManagement.Components.CharacterRendererBase
  langs:
  - csharp
  - vb
  name: ShowCharacter()
  nameWithType: CharacterRendererBase.ShowCharacter()
  fullName: BlazerTech.CharacterManagement.Components.CharacterRendererBase.ShowCharacter()
  type: Method
  source:
    remote:
      path: Assets/BT-CMS/Scripts/Usage Scripts/Character Renderers/CharacterRendererBase.cs
      branch: main
      repo: https://github.com/Legendaryswordsman2/BlazerTech-Character-Management-System.git
    id: ShowCharacter
    path: ../../../Unity/Unity Projects/BlazerTech Character Management System/Assets/BT-CMS/Scripts/Usage Scripts/Character Renderers/CharacterRendererBase.cs
    startLine: 71
  assemblies:
  - Assembly-CSharp
  namespace: BlazerTech.CharacterManagement.Components
  syntax:
    content: protected abstract void ShowCharacter()
    content.vb: Protected MustOverride Sub ShowCharacter()
  overload: BlazerTech.CharacterManagement.Components.CharacterRendererBase.ShowCharacter*
- uid: BlazerTech.CharacterManagement.Components.CharacterRendererBase.ReleaseCharacter
  commentId: M:BlazerTech.CharacterManagement.Components.CharacterRendererBase.ReleaseCharacter
  id: ReleaseCharacter
  parent: BlazerTech.CharacterManagement.Components.CharacterRendererBase
  langs:
  - csharp
  - vb
  name: ReleaseCharacter()
  nameWithType: CharacterRendererBase.ReleaseCharacter()
  fullName: BlazerTech.CharacterManagement.Components.CharacterRendererBase.ReleaseCharacter()
  type: Method
  source:
    remote:
      path: Assets/BT-CMS/Scripts/Usage Scripts/Character Renderers/CharacterRendererBase.cs
      branch: main
      repo: https://github.com/Legendaryswordsman2/BlazerTech-Character-Management-System.git
    id: ReleaseCharacter
    path: ../../../Unity/Unity Projects/BlazerTech Character Management System/Assets/BT-CMS/Scripts/Usage Scripts/Character Renderers/CharacterRendererBase.cs
    startLine: 73
  assemblies:
  - Assembly-CSharp
  namespace: BlazerTech.CharacterManagement.Components
  syntax:
    content: protected abstract void ReleaseCharacter()
    content.vb: Protected MustOverride Sub ReleaseCharacter()
  overload: BlazerTech.CharacterManagement.Components.CharacterRendererBase.ReleaseCharacter*
- uid: BlazerTech.CharacterManagement.Components.CharacterRendererBase.TrySetCharacterAnimator(BlazerTech.CharacterManagement.Characters.CharacterTypeBaseSO)
  commentId: M:BlazerTech.CharacterManagement.Components.CharacterRendererBase.TrySetCharacterAnimator(BlazerTech.CharacterManagement.Characters.CharacterTypeBaseSO)
  id: TrySetCharacterAnimator(BlazerTech.CharacterManagement.Characters.CharacterTypeBaseSO)
  parent: BlazerTech.CharacterManagement.Components.CharacterRendererBase
  langs:
  - csharp
  - vb
  name: TrySetCharacterAnimator(CharacterTypeBaseSO)
  nameWithType: CharacterRendererBase.TrySetCharacterAnimator(CharacterTypeBaseSO)
  fullName: BlazerTech.CharacterManagement.Components.CharacterRendererBase.TrySetCharacterAnimator(BlazerTech.CharacterManagement.Characters.CharacterTypeBaseSO)
  type: Method
  source:
    remote:
      path: Assets/BT-CMS/Scripts/Usage Scripts/Character Renderers/CharacterRendererBase.cs
      branch: main
      repo: https://github.com/Legendaryswordsman2/BlazerTech-Character-Management-System.git
    id: TrySetCharacterAnimator
    path: ../../../Unity/Unity Projects/BlazerTech Character Management System/Assets/BT-CMS/Scripts/Usage Scripts/Character Renderers/CharacterRendererBase.cs
    startLine: 75
  assemblies:
  - Assembly-CSharp
  namespace: BlazerTech.CharacterManagement.Components
  syntax:
    content: protected void TrySetCharacterAnimator(CharacterTypeBaseSO characterType)
    parameters:
    - id: characterType
      type: BlazerTech.CharacterManagement.Characters.CharacterTypeBaseSO
    content.vb: Protected Sub TrySetCharacterAnimator(characterType As CharacterTypeBaseSO)
  overload: BlazerTech.CharacterManagement.Components.CharacterRendererBase.TrySetCharacterAnimator*
- uid: BlazerTech.CharacterManagement.Components.CharacterRendererBase.OnDestroy
  commentId: M:BlazerTech.CharacterManagement.Components.CharacterRendererBase.OnDestroy
  id: OnDestroy
  parent: BlazerTech.CharacterManagement.Components.CharacterRendererBase
  langs:
  - csharp
  - vb
  name: OnDestroy()
  nameWithType: CharacterRendererBase.OnDestroy()
  fullName: BlazerTech.CharacterManagement.Components.CharacterRendererBase.OnDestroy()
  type: Method
  source:
    remote:
      path: Assets/BT-CMS/Scripts/Usage Scripts/Character Renderers/CharacterRendererBase.cs
      branch: main
      repo: https://github.com/Legendaryswordsman2/BlazerTech-Character-Management-System.git
    id: OnDestroy
    path: ../../../Unity/Unity Projects/BlazerTech Character Management System/Assets/BT-CMS/Scripts/Usage Scripts/Character Renderers/CharacterRendererBase.cs
    startLine: 94
  assemblies:
  - Assembly-CSharp
  namespace: BlazerTech.CharacterManagement.Components
  syntax:
    content: protected virtual void OnDestroy()
    content.vb: Protected Overridable Sub OnDestroy()
  overload: BlazerTech.CharacterManagement.Components.CharacterRendererBase.OnDestroy*
references:
- uid: BlazerTech.CharacterManagement.Components
  commentId: N:BlazerTech.CharacterManagement.Components
  href: BlazerTech.html
  name: BlazerTech.CharacterManagement.Components
  nameWithType: BlazerTech.CharacterManagement.Components
  fullName: BlazerTech.CharacterManagement.Components
  spec.csharp:
  - uid: BlazerTech
    name: BlazerTech
    href: BlazerTech.html
  - name: .
  - uid: BlazerTech.CharacterManagement
    name: CharacterManagement
    href: BlazerTech.CharacterManagement.html
  - name: .
  - uid: BlazerTech.CharacterManagement.Components
    name: Components
    href: BlazerTech.CharacterManagement.Components.html
  spec.vb:
  - uid: BlazerTech
    name: BlazerTech
    href: BlazerTech.html
  - name: .
  - uid: BlazerTech.CharacterManagement
    name: CharacterManagement
    href: BlazerTech.CharacterManagement.html
  - name: .
  - uid: BlazerTech.CharacterManagement.Components
    name: Components
    href: BlazerTech.CharacterManagement.Components.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: UnityEngine.Object
  commentId: T:UnityEngine.Object
  parent: UnityEngine
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: UnityEngine.Object
- uid: UnityEngine.Component
  commentId: T:UnityEngine.Component
  parent: UnityEngine
  isExternal: true
  name: Component
  nameWithType: Component
  fullName: UnityEngine.Component
- uid: UnityEngine.Behaviour
  commentId: T:UnityEngine.Behaviour
  parent: UnityEngine
  isExternal: true
  name: Behaviour
  nameWithType: Behaviour
  fullName: UnityEngine.Behaviour
- uid: UnityEngine.MonoBehaviour
  commentId: T:UnityEngine.MonoBehaviour
  parent: UnityEngine
  isExternal: true
  name: MonoBehaviour
  nameWithType: MonoBehaviour
  fullName: UnityEngine.MonoBehaviour
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: UnityEngine.Renderer
  commentId: T:UnityEngine.Renderer
  parent: UnityEngine
  isExternal: true
  name: Renderer
  nameWithType: Renderer
  fullName: UnityEngine.Renderer
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: UnityEngine.Animator
  commentId: T:UnityEngine.Animator
  parent: UnityEngine
  isExternal: true
  name: Animator
  nameWithType: Animator
  fullName: UnityEngine.Animator
- uid: BlazerTech.CharacterManagement.Components.CharacterLoaderLoadingMode
  commentId: T:BlazerTech.CharacterManagement.Components.CharacterLoaderLoadingMode
  parent: BlazerTech.CharacterManagement.Components
  href: BlazerTech.CharacterManagement.Components.CharacterLoaderLoadingMode.html
  name: CharacterLoaderLoadingMode
  nameWithType: CharacterLoaderLoadingMode
  fullName: BlazerTech.CharacterManagement.Components.CharacterLoaderLoadingMode
- uid: BlazerTech.CharacterManagement.Components.CharacterRendererBase.ValidationCheck*
  commentId: Overload:BlazerTech.CharacterManagement.Components.CharacterRendererBase.ValidationCheck
  href: BlazerTech.CharacterManagement.Components.CharacterRendererBase.html#BlazerTech_CharacterManagement_Components_CharacterRendererBase_ValidationCheck
  name: ValidationCheck
  nameWithType: CharacterRendererBase.ValidationCheck
  fullName: BlazerTech.CharacterManagement.Components.CharacterRendererBase.ValidationCheck
- uid: BlazerTech.CharacterManagement.Components.CharacterRendererBase.GetAndShowCharacter*
  commentId: Overload:BlazerTech.CharacterManagement.Components.CharacterRendererBase.GetAndShowCharacter
  href: BlazerTech.CharacterManagement.Components.CharacterRendererBase.html#BlazerTech_CharacterManagement_Components_CharacterRendererBase_GetAndShowCharacter
  name: GetAndShowCharacter
  nameWithType: CharacterRendererBase.GetAndShowCharacter
  fullName: BlazerTech.CharacterManagement.Components.CharacterRendererBase.GetAndShowCharacter
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: BlazerTech.CharacterManagement.Components.CharacterRendererBase.ShowCharacter*
  commentId: Overload:BlazerTech.CharacterManagement.Components.CharacterRendererBase.ShowCharacter
  href: BlazerTech.CharacterManagement.Components.CharacterRendererBase.html#BlazerTech_CharacterManagement_Components_CharacterRendererBase_ShowCharacter
  name: ShowCharacter
  nameWithType: CharacterRendererBase.ShowCharacter
  fullName: BlazerTech.CharacterManagement.Components.CharacterRendererBase.ShowCharacter
- uid: BlazerTech.CharacterManagement.Components.CharacterRendererBase.ReleaseCharacter*
  commentId: Overload:BlazerTech.CharacterManagement.Components.CharacterRendererBase.ReleaseCharacter
  href: BlazerTech.CharacterManagement.Components.CharacterRendererBase.html#BlazerTech_CharacterManagement_Components_CharacterRendererBase_ReleaseCharacter
  name: ReleaseCharacter
  nameWithType: CharacterRendererBase.ReleaseCharacter
  fullName: BlazerTech.CharacterManagement.Components.CharacterRendererBase.ReleaseCharacter
- uid: BlazerTech.CharacterManagement.Components.CharacterRendererBase.TrySetCharacterAnimator*
  commentId: Overload:BlazerTech.CharacterManagement.Components.CharacterRendererBase.TrySetCharacterAnimator
  href: BlazerTech.CharacterManagement.Components.CharacterRendererBase.html#BlazerTech_CharacterManagement_Components_CharacterRendererBase_TrySetCharacterAnimator_BlazerTech_CharacterManagement_Characters_CharacterTypeBaseSO_
  name: TrySetCharacterAnimator
  nameWithType: CharacterRendererBase.TrySetCharacterAnimator
  fullName: BlazerTech.CharacterManagement.Components.CharacterRendererBase.TrySetCharacterAnimator
- uid: BlazerTech.CharacterManagement.Characters.CharacterTypeBaseSO
  commentId: T:BlazerTech.CharacterManagement.Characters.CharacterTypeBaseSO
  parent: BlazerTech.CharacterManagement.Characters
  href: BlazerTech.CharacterManagement.Characters.CharacterTypeBaseSO.html
  name: CharacterTypeBaseSO
  nameWithType: CharacterTypeBaseSO
  fullName: BlazerTech.CharacterManagement.Characters.CharacterTypeBaseSO
- uid: BlazerTech.CharacterManagement.Characters
  commentId: N:BlazerTech.CharacterManagement.Characters
  href: BlazerTech.html
  name: BlazerTech.CharacterManagement.Characters
  nameWithType: BlazerTech.CharacterManagement.Characters
  fullName: BlazerTech.CharacterManagement.Characters
  spec.csharp:
  - uid: BlazerTech
    name: BlazerTech
    href: BlazerTech.html
  - name: .
  - uid: BlazerTech.CharacterManagement
    name: CharacterManagement
    href: BlazerTech.CharacterManagement.html
  - name: .
  - uid: BlazerTech.CharacterManagement.Characters
    name: Characters
    href: BlazerTech.CharacterManagement.Characters.html
  spec.vb:
  - uid: BlazerTech
    name: BlazerTech
    href: BlazerTech.html
  - name: .
  - uid: BlazerTech.CharacterManagement
    name: CharacterManagement
    href: BlazerTech.CharacterManagement.html
  - name: .
  - uid: BlazerTech.CharacterManagement.Characters
    name: Characters
    href: BlazerTech.CharacterManagement.Characters.html
- uid: BlazerTech.CharacterManagement.Components.CharacterRendererBase.OnDestroy*
  commentId: Overload:BlazerTech.CharacterManagement.Components.CharacterRendererBase.OnDestroy
  href: BlazerTech.CharacterManagement.Components.CharacterRendererBase.html#BlazerTech_CharacterManagement_Components_CharacterRendererBase_OnDestroy
  name: OnDestroy
  nameWithType: CharacterRendererBase.OnDestroy
  fullName: BlazerTech.CharacterManagement.Components.CharacterRendererBase.OnDestroy
