### YamlMime:ManagedReference
items:
- uid: BlazerTech.CharacterManagement.Characters.CharacterTypeBaseSO
  commentId: T:BlazerTech.CharacterManagement.Characters.CharacterTypeBaseSO
  id: CharacterTypeBaseSO
  parent: BlazerTech.CharacterManagement.Characters
  children:
  - BlazerTech.CharacterManagement.Characters.CharacterTypeBaseSO.BaseSpritesheet
  - BlazerTech.CharacterManagement.Characters.CharacterTypeBaseSO.CharacterController
  - BlazerTech.CharacterManagement.Characters.CharacterTypeBaseSO.CharacterTypeID
  - BlazerTech.CharacterManagement.Characters.CharacterTypeBaseSO.IsValid
  - BlazerTech.CharacterManagement.Characters.CharacterTypeBaseSO.IsValidCharacterSpriteSheet(UnityEngine.Sprite)
  - BlazerTech.CharacterManagement.Characters.CharacterTypeBaseSO.PerformValidationCheck
  langs:
  - csharp
  - vb
  name: CharacterTypeBaseSO
  nameWithType: CharacterTypeBaseSO
  fullName: BlazerTech.CharacterManagement.Characters.CharacterTypeBaseSO
  type: Class
  source:
    remote:
      path: Assets/BT-CMS/Scripts/Scriptable Objects/Character Types/CharacterTypeBaseSO.cs
      branch: main
      repo: https://github.com/Legendaryswordsman2/BlazerTech-Character-Management-System.git
    id: CharacterTypeBaseSO
    path: ../../../Unity/Unity Projects/BlazerTech Character Management System/Assets/BT-CMS/Scripts/Scriptable Objects/Character Types/CharacterTypeBaseSO.cs
    startLine: 10
  assemblies:
  - Assembly-CSharp
  namespace: BlazerTech.CharacterManagement.Characters
  summary: bass Scriptable Object for all Character Types.
  example: []
  syntax:
    content: 'public abstract class CharacterTypeBaseSO : ScriptableObject, IValidatable'
    content.vb: Public MustInherit Class CharacterTypeBaseSO Inherits ScriptableObject Implements IValidatable
  inheritance:
  - System.Object
  - UnityEngine.Object
  - UnityEngine.ScriptableObject
  derivedClasses:
  - BlazerTech.CharacterManagement.Characters.LayeredCharacterTypeSO
  - BlazerTech.CharacterManagement.Characters.UnifiedCharacterTypeSO
  implements:
  - BlazerTech.CharacterManagement.Core.IValidatable
- uid: BlazerTech.CharacterManagement.Characters.CharacterTypeBaseSO.CharacterTypeID
  commentId: P:BlazerTech.CharacterManagement.Characters.CharacterTypeBaseSO.CharacterTypeID
  id: CharacterTypeID
  parent: BlazerTech.CharacterManagement.Characters.CharacterTypeBaseSO
  langs:
  - csharp
  - vb
  name: CharacterTypeID
  nameWithType: CharacterTypeBaseSO.CharacterTypeID
  fullName: BlazerTech.CharacterManagement.Characters.CharacterTypeBaseSO.CharacterTypeID
  type: Property
  source:
    remote:
      path: Assets/BT-CMS/Scripts/Scriptable Objects/Character Types/CharacterTypeBaseSO.cs
      branch: main
      repo: https://github.com/Legendaryswordsman2/BlazerTech-Character-Management-System.git
    id: CharacterTypeID
    path: ../../../Unity/Unity Projects/BlazerTech Character Management System/Assets/BT-CMS/Scripts/Scriptable Objects/Character Types/CharacterTypeBaseSO.cs
    startLine: 16
  assemblies:
  - Assembly-CSharp
  namespace: BlazerTech.CharacterManagement.Characters
  summary: A **unique identifier** used to reference this character type. **Must be unique** across all character types.
  example: []
  syntax:
    content: public string CharacterTypeID { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property CharacterTypeID As String
  overload: BlazerTech.CharacterManagement.Characters.CharacterTypeBaseSO.CharacterTypeID*
- uid: BlazerTech.CharacterManagement.Characters.CharacterTypeBaseSO.BaseSpritesheet
  commentId: P:BlazerTech.CharacterManagement.Characters.CharacterTypeBaseSO.BaseSpritesheet
  id: BaseSpritesheet
  parent: BlazerTech.CharacterManagement.Characters.CharacterTypeBaseSO
  langs:
  - csharp
  - vb
  name: BaseSpritesheet
  nameWithType: CharacterTypeBaseSO.BaseSpritesheet
  fullName: BlazerTech.CharacterManagement.Characters.CharacterTypeBaseSO.BaseSpritesheet
  type: Property
  source:
    remote:
      path: Assets/BT-CMS/Scripts/Scriptable Objects/Character Types/CharacterTypeBaseSO.cs
      branch: main
      repo: https://github.com/Legendaryswordsman2/BlazerTech-Character-Management-System.git
    id: BaseSpritesheet
    path: ../../../Unity/Unity Projects/BlazerTech Character Management System/Assets/BT-CMS/Scripts/Scriptable Objects/Character Types/CharacterTypeBaseSO.cs
    startLine: 24
  assemblies:
  - Assembly-CSharp
  namespace: BlazerTech.CharacterManagement.Characters
  summary: >-
    Defines the **required base sprite sheet** for the character type.  

    Set this spritesheets **Sprite Mode** to **Multiple** and slice it. Whenever this character is used the sprites in the **BaseSpritesheet** will be used and a shader will then  override them with the finalized character.

    Character spritesheets with mismatched dimensions will be rejected when validated.
  example: []
  syntax:
    content: public Texture2D BaseSpritesheet { get; }
    parameters: []
    return:
      type: UnityEngine.Texture2D
    content.vb: Public Property BaseSpritesheet As Texture2D
  overload: BlazerTech.CharacterManagement.Characters.CharacterTypeBaseSO.BaseSpritesheet*
- uid: BlazerTech.CharacterManagement.Characters.CharacterTypeBaseSO.CharacterController
  commentId: P:BlazerTech.CharacterManagement.Characters.CharacterTypeBaseSO.CharacterController
  id: CharacterController
  parent: BlazerTech.CharacterManagement.Characters.CharacterTypeBaseSO
  langs:
  - csharp
  - vb
  name: CharacterController
  nameWithType: CharacterTypeBaseSO.CharacterController
  fullName: BlazerTech.CharacterManagement.Characters.CharacterTypeBaseSO.CharacterController
  type: Property
  source:
    remote:
      path: Assets/BT-CMS/Scripts/Scriptable Objects/Character Types/CharacterTypeBaseSO.cs
      branch: main
      repo: https://github.com/Legendaryswordsman2/BlazerTech-Character-Management-System.git
    id: CharacterController
    path: ../../../Unity/Unity Projects/BlazerTech Character Management System/Assets/BT-CMS/Scripts/Scriptable Objects/Character Types/CharacterTypeBaseSO.cs
    startLine: 31
  assemblies:
  - Assembly-CSharp
  namespace: BlazerTech.CharacterManagement.Characters
  summary: >-
    The animator controller asset assigned to characters of this type.  

    Animations inside this controller should use sprites in the <xref href="BlazerTech.CharacterManagement.Characters.CharacterTypeBaseSO.BaseSpritesheet" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public RuntimeAnimatorController CharacterController { get; }
    parameters: []
    return:
      type: UnityEngine.RuntimeAnimatorController
    content.vb: Public Property CharacterController As RuntimeAnimatorController
  overload: BlazerTech.CharacterManagement.Characters.CharacterTypeBaseSO.CharacterController*
- uid: BlazerTech.CharacterManagement.Characters.CharacterTypeBaseSO.IsValid
  commentId: P:BlazerTech.CharacterManagement.Characters.CharacterTypeBaseSO.IsValid
  id: IsValid
  parent: BlazerTech.CharacterManagement.Characters.CharacterTypeBaseSO
  langs:
  - csharp
  - vb
  name: IsValid
  nameWithType: CharacterTypeBaseSO.IsValid
  fullName: BlazerTech.CharacterManagement.Characters.CharacterTypeBaseSO.IsValid
  type: Property
  source:
    remote:
      path: Assets/BT-CMS/Scripts/Scriptable Objects/Character Types/CharacterTypeBaseSO.cs
      branch: main
      repo: https://github.com/Legendaryswordsman2/BlazerTech-Character-Management-System.git
    id: IsValid
    path: ../../../Unity/Unity Projects/BlazerTech Character Management System/Assets/BT-CMS/Scripts/Scriptable Objects/Character Types/CharacterTypeBaseSO.cs
    startLine: 35
  assemblies:
  - Assembly-CSharp
  namespace: BlazerTech.CharacterManagement.Characters
  summary: >-
    Gets a value indicating whether the object is currently valid.  

    This value should be updated when <xref href="BlazerTech.CharacterManagement.Core.IValidatable.PerformValidationCheck" data-throw-if-not-resolved="false"></xref> is called.
  example: []
  syntax:
    content: public bool IsValid { get; protected set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsValid As Boolean
  overload: BlazerTech.CharacterManagement.Characters.CharacterTypeBaseSO.IsValid*
  implements:
  - BlazerTech.CharacterManagement.Core.IValidatable.IsValid
- uid: BlazerTech.CharacterManagement.Characters.CharacterTypeBaseSO.PerformValidationCheck
  commentId: M:BlazerTech.CharacterManagement.Characters.CharacterTypeBaseSO.PerformValidationCheck
  id: PerformValidationCheck
  parent: BlazerTech.CharacterManagement.Characters.CharacterTypeBaseSO
  langs:
  - csharp
  - vb
  name: PerformValidationCheck()
  nameWithType: CharacterTypeBaseSO.PerformValidationCheck()
  fullName: BlazerTech.CharacterManagement.Characters.CharacterTypeBaseSO.PerformValidationCheck()
  type: Method
  source:
    remote:
      path: Assets/BT-CMS/Scripts/Scriptable Objects/Character Types/CharacterTypeBaseSO.cs
      branch: main
      repo: https://github.com/Legendaryswordsman2/BlazerTech-Character-Management-System.git
    id: PerformValidationCheck
    path: ../../../Unity/Unity Projects/BlazerTech Character Management System/Assets/BT-CMS/Scripts/Scriptable Objects/Character Types/CharacterTypeBaseSO.cs
    startLine: 39
  assemblies:
  - Assembly-CSharp
  namespace: BlazerTech.CharacterManagement.Characters
  summary: Checks/Rechecks if the object is valid and updates <xref href="BlazerTech.CharacterManagement.Core.IValidatable.IsValid" data-throw-if-not-resolved="false"></xref> accordingly.
  example: []
  syntax:
    content: public virtual bool PerformValidationCheck()
    return:
      type: System.Boolean
      description: true if the object is valid after the check; otherwise, false.
    content.vb: Public Overridable Function PerformValidationCheck() As Boolean
  overload: BlazerTech.CharacterManagement.Characters.CharacterTypeBaseSO.PerformValidationCheck*
  implements:
  - BlazerTech.CharacterManagement.Core.IValidatable.PerformValidationCheck
- uid: BlazerTech.CharacterManagement.Characters.CharacterTypeBaseSO.IsValidCharacterSpriteSheet(UnityEngine.Sprite)
  commentId: M:BlazerTech.CharacterManagement.Characters.CharacterTypeBaseSO.IsValidCharacterSpriteSheet(UnityEngine.Sprite)
  id: IsValidCharacterSpriteSheet(UnityEngine.Sprite)
  parent: BlazerTech.CharacterManagement.Characters.CharacterTypeBaseSO
  langs:
  - csharp
  - vb
  name: IsValidCharacterSpriteSheet(Sprite)
  nameWithType: CharacterTypeBaseSO.IsValidCharacterSpriteSheet(Sprite)
  fullName: BlazerTech.CharacterManagement.Characters.CharacterTypeBaseSO.IsValidCharacterSpriteSheet(UnityEngine.Sprite)
  type: Method
  source:
    remote:
      path: Assets/BT-CMS/Scripts/Scriptable Objects/Character Types/CharacterTypeBaseSO.cs
      branch: main
      repo: https://github.com/Legendaryswordsman2/BlazerTech-Character-Management-System.git
    id: IsValidCharacterSpriteSheet
    path: ../../../Unity/Unity Projects/BlazerTech Character Management System/Assets/BT-CMS/Scripts/Scriptable Objects/Character Types/CharacterTypeBaseSO.cs
    startLine: 64
  assemblies:
  - Assembly-CSharp
  namespace: BlazerTech.CharacterManagement.Characters
  summary: Returns true if the sprite fits the conditions for the Character Type.
  example: []
  syntax:
    content: public virtual bool IsValidCharacterSpriteSheet(Sprite sprite)
    parameters:
    - id: sprite
      type: UnityEngine.Sprite
      description: ''
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Overridable Function IsValidCharacterSpriteSheet(sprite As Sprite) As Boolean
  overload: BlazerTech.CharacterManagement.Characters.CharacterTypeBaseSO.IsValidCharacterSpriteSheet*
references:
- uid: BlazerTech.CharacterManagement.Characters
  commentId: N:BlazerTech.CharacterManagement.Characters
  href: BlazerTech.html
  name: BlazerTech.CharacterManagement.Characters
  nameWithType: BlazerTech.CharacterManagement.Characters
  fullName: BlazerTech.CharacterManagement.Characters
  spec.csharp:
  - uid: BlazerTech
    name: BlazerTech
    href: BlazerTech.html
  - name: .
  - uid: BlazerTech.CharacterManagement
    name: CharacterManagement
    href: BlazerTech.CharacterManagement.html
  - name: .
  - uid: BlazerTech.CharacterManagement.Characters
    name: Characters
    href: BlazerTech.CharacterManagement.Characters.html
  spec.vb:
  - uid: BlazerTech
    name: BlazerTech
    href: BlazerTech.html
  - name: .
  - uid: BlazerTech.CharacterManagement
    name: CharacterManagement
    href: BlazerTech.CharacterManagement.html
  - name: .
  - uid: BlazerTech.CharacterManagement.Characters
    name: Characters
    href: BlazerTech.CharacterManagement.Characters.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: UnityEngine.Object
  commentId: T:UnityEngine.Object
  parent: UnityEngine
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: UnityEngine.Object
- uid: UnityEngine.ScriptableObject
  commentId: T:UnityEngine.ScriptableObject
  parent: UnityEngine
  isExternal: true
  name: ScriptableObject
  nameWithType: ScriptableObject
  fullName: UnityEngine.ScriptableObject
- uid: BlazerTech.CharacterManagement.Core.IValidatable
  commentId: T:BlazerTech.CharacterManagement.Core.IValidatable
  parent: BlazerTech.CharacterManagement.Core
  href: BlazerTech.CharacterManagement.Core.IValidatable.html
  name: IValidatable
  nameWithType: IValidatable
  fullName: BlazerTech.CharacterManagement.Core.IValidatable
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: BlazerTech.CharacterManagement.Core
  commentId: N:BlazerTech.CharacterManagement.Core
  href: BlazerTech.html
  name: BlazerTech.CharacterManagement.Core
  nameWithType: BlazerTech.CharacterManagement.Core
  fullName: BlazerTech.CharacterManagement.Core
  spec.csharp:
  - uid: BlazerTech
    name: BlazerTech
    href: BlazerTech.html
  - name: .
  - uid: BlazerTech.CharacterManagement
    name: CharacterManagement
    href: BlazerTech.CharacterManagement.html
  - name: .
  - uid: BlazerTech.CharacterManagement.Core
    name: Core
    href: BlazerTech.CharacterManagement.Core.html
  spec.vb:
  - uid: BlazerTech
    name: BlazerTech
    href: BlazerTech.html
  - name: .
  - uid: BlazerTech.CharacterManagement
    name: CharacterManagement
    href: BlazerTech.CharacterManagement.html
  - name: .
  - uid: BlazerTech.CharacterManagement.Core
    name: Core
    href: BlazerTech.CharacterManagement.Core.html
- uid: BlazerTech.CharacterManagement.Characters.CharacterTypeBaseSO.CharacterTypeID*
  commentId: Overload:BlazerTech.CharacterManagement.Characters.CharacterTypeBaseSO.CharacterTypeID
  href: BlazerTech.CharacterManagement.Characters.CharacterTypeBaseSO.html#BlazerTech_CharacterManagement_Characters_CharacterTypeBaseSO_CharacterTypeID
  name: CharacterTypeID
  nameWithType: CharacterTypeBaseSO.CharacterTypeID
  fullName: BlazerTech.CharacterManagement.Characters.CharacterTypeBaseSO.CharacterTypeID
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: BlazerTech.CharacterManagement.Characters.CharacterTypeBaseSO.BaseSpritesheet*
  commentId: Overload:BlazerTech.CharacterManagement.Characters.CharacterTypeBaseSO.BaseSpritesheet
  href: BlazerTech.CharacterManagement.Characters.CharacterTypeBaseSO.html#BlazerTech_CharacterManagement_Characters_CharacterTypeBaseSO_BaseSpritesheet
  name: BaseSpritesheet
  nameWithType: CharacterTypeBaseSO.BaseSpritesheet
  fullName: BlazerTech.CharacterManagement.Characters.CharacterTypeBaseSO.BaseSpritesheet
- uid: UnityEngine.Texture2D
  commentId: T:UnityEngine.Texture2D
  parent: UnityEngine
  isExternal: true
  name: Texture2D
  nameWithType: Texture2D
  fullName: UnityEngine.Texture2D
- uid: BlazerTech.CharacterManagement.Characters.CharacterTypeBaseSO.BaseSpritesheet
  commentId: P:BlazerTech.CharacterManagement.Characters.CharacterTypeBaseSO.BaseSpritesheet
  parent: BlazerTech.CharacterManagement.Characters.CharacterTypeBaseSO
  href: BlazerTech.CharacterManagement.Characters.CharacterTypeBaseSO.html#BlazerTech_CharacterManagement_Characters_CharacterTypeBaseSO_BaseSpritesheet
  name: BaseSpritesheet
  nameWithType: CharacterTypeBaseSO.BaseSpritesheet
  fullName: BlazerTech.CharacterManagement.Characters.CharacterTypeBaseSO.BaseSpritesheet
- uid: BlazerTech.CharacterManagement.Characters.CharacterTypeBaseSO.CharacterController*
  commentId: Overload:BlazerTech.CharacterManagement.Characters.CharacterTypeBaseSO.CharacterController
  href: BlazerTech.CharacterManagement.Characters.CharacterTypeBaseSO.html#BlazerTech_CharacterManagement_Characters_CharacterTypeBaseSO_CharacterController
  name: CharacterController
  nameWithType: CharacterTypeBaseSO.CharacterController
  fullName: BlazerTech.CharacterManagement.Characters.CharacterTypeBaseSO.CharacterController
- uid: UnityEngine.RuntimeAnimatorController
  commentId: T:UnityEngine.RuntimeAnimatorController
  parent: UnityEngine
  isExternal: true
  name: RuntimeAnimatorController
  nameWithType: RuntimeAnimatorController
  fullName: UnityEngine.RuntimeAnimatorController
- uid: BlazerTech.CharacterManagement.Characters.CharacterTypeBaseSO
  commentId: T:BlazerTech.CharacterManagement.Characters.CharacterTypeBaseSO
  parent: BlazerTech.CharacterManagement.Characters
  href: BlazerTech.CharacterManagement.Characters.CharacterTypeBaseSO.html
  name: CharacterTypeBaseSO
  nameWithType: CharacterTypeBaseSO
  fullName: BlazerTech.CharacterManagement.Characters.CharacterTypeBaseSO
- uid: BlazerTech.CharacterManagement.Core.IValidatable.PerformValidationCheck
  commentId: M:BlazerTech.CharacterManagement.Core.IValidatable.PerformValidationCheck
  parent: BlazerTech.CharacterManagement.Core.IValidatable
  href: BlazerTech.CharacterManagement.Core.IValidatable.html#BlazerTech_CharacterManagement_Core_IValidatable_PerformValidationCheck
  name: PerformValidationCheck()
  nameWithType: IValidatable.PerformValidationCheck()
  fullName: BlazerTech.CharacterManagement.Core.IValidatable.PerformValidationCheck()
  spec.csharp:
  - uid: BlazerTech.CharacterManagement.Core.IValidatable.PerformValidationCheck
    name: PerformValidationCheck
    href: BlazerTech.CharacterManagement.Core.IValidatable.html#BlazerTech_CharacterManagement_Core_IValidatable_PerformValidationCheck
  - name: (
  - name: )
  spec.vb:
  - uid: BlazerTech.CharacterManagement.Core.IValidatable.PerformValidationCheck
    name: PerformValidationCheck
    href: BlazerTech.CharacterManagement.Core.IValidatable.html#BlazerTech_CharacterManagement_Core_IValidatable_PerformValidationCheck
  - name: (
  - name: )
- uid: BlazerTech.CharacterManagement.Characters.CharacterTypeBaseSO.IsValid*
  commentId: Overload:BlazerTech.CharacterManagement.Characters.CharacterTypeBaseSO.IsValid
  href: BlazerTech.CharacterManagement.Characters.CharacterTypeBaseSO.html#BlazerTech_CharacterManagement_Characters_CharacterTypeBaseSO_IsValid
  name: IsValid
  nameWithType: CharacterTypeBaseSO.IsValid
  fullName: BlazerTech.CharacterManagement.Characters.CharacterTypeBaseSO.IsValid
- uid: BlazerTech.CharacterManagement.Core.IValidatable.IsValid
  commentId: P:BlazerTech.CharacterManagement.Core.IValidatable.IsValid
  parent: BlazerTech.CharacterManagement.Core.IValidatable
  href: BlazerTech.CharacterManagement.Core.IValidatable.html#BlazerTech_CharacterManagement_Core_IValidatable_IsValid
  name: IsValid
  nameWithType: IValidatable.IsValid
  fullName: BlazerTech.CharacterManagement.Core.IValidatable.IsValid
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: BlazerTech.CharacterManagement.Characters.CharacterTypeBaseSO.PerformValidationCheck*
  commentId: Overload:BlazerTech.CharacterManagement.Characters.CharacterTypeBaseSO.PerformValidationCheck
  href: BlazerTech.CharacterManagement.Characters.CharacterTypeBaseSO.html#BlazerTech_CharacterManagement_Characters_CharacterTypeBaseSO_PerformValidationCheck
  name: PerformValidationCheck
  nameWithType: CharacterTypeBaseSO.PerformValidationCheck
  fullName: BlazerTech.CharacterManagement.Characters.CharacterTypeBaseSO.PerformValidationCheck
- uid: BlazerTech.CharacterManagement.Characters.CharacterTypeBaseSO.IsValidCharacterSpriteSheet*
  commentId: Overload:BlazerTech.CharacterManagement.Characters.CharacterTypeBaseSO.IsValidCharacterSpriteSheet
  href: BlazerTech.CharacterManagement.Characters.CharacterTypeBaseSO.html#BlazerTech_CharacterManagement_Characters_CharacterTypeBaseSO_IsValidCharacterSpriteSheet_UnityEngine_Sprite_
  name: IsValidCharacterSpriteSheet
  nameWithType: CharacterTypeBaseSO.IsValidCharacterSpriteSheet
  fullName: BlazerTech.CharacterManagement.Characters.CharacterTypeBaseSO.IsValidCharacterSpriteSheet
- uid: UnityEngine.Sprite
  commentId: T:UnityEngine.Sprite
  parent: UnityEngine
  isExternal: true
  name: Sprite
  nameWithType: Sprite
  fullName: UnityEngine.Sprite
