### YamlMime:ManagedReference
items:
- uid: BlazerTech.CharacterManagement.Characters.CharacterLayerDefinitionSO
  commentId: T:BlazerTech.CharacterManagement.Characters.CharacterLayerDefinitionSO
  id: CharacterLayerDefinitionSO
  parent: BlazerTech.CharacterManagement.Characters
  children:
  - BlazerTech.CharacterManagement.Characters.CharacterLayerDefinitionSO.AcquireAllLayerOptionsAsync(System.Action{System.Single})
  - BlazerTech.CharacterManagement.Characters.CharacterLayerDefinitionSO.AttachedCharacterType
  - BlazerTech.CharacterManagement.Characters.CharacterLayerDefinitionSO.CollectLayerOptions_EditMode
  - BlazerTech.CharacterManagement.Characters.CharacterLayerDefinitionSO.GetLayerOptionFromIndex(System.Int32)
  - BlazerTech.CharacterManagement.Characters.CharacterLayerDefinitionSO.GetLayerOptionFromKey(System.String)
  - BlazerTech.CharacterManagement.Characters.CharacterLayerDefinitionSO.GetLayerOptionFromSpritesheetName(System.String)
  - BlazerTech.CharacterManagement.Characters.CharacterLayerDefinitionSO.GetRandomLayerOption
  - BlazerTech.CharacterManagement.Characters.CharacterLayerDefinitionSO.IncludeNoneOption
  - BlazerTech.CharacterManagement.Characters.CharacterLayerDefinitionSO.Initialize(BlazerTech.CharacterManagement.Characters.LayeredCharacterTypeSO)
  - BlazerTech.CharacterManagement.Characters.CharacterLayerDefinitionSO.IsInitialized
  - BlazerTech.CharacterManagement.Characters.CharacterLayerDefinitionSO.IsValid
  - BlazerTech.CharacterManagement.Characters.CharacterLayerDefinitionSO.LayerName
  - BlazerTech.CharacterManagement.Characters.CharacterLayerDefinitionSO.LayerOptions
  - BlazerTech.CharacterManagement.Characters.CharacterLayerDefinitionSO.PerformValidationCheck
  - BlazerTech.CharacterManagement.Characters.CharacterLayerDefinitionSO.ReleaseAllLayerOptions
  langs:
  - csharp
  - vb
  name: CharacterLayerDefinitionSO
  nameWithType: CharacterLayerDefinitionSO
  fullName: BlazerTech.CharacterManagement.Characters.CharacterLayerDefinitionSO
  type: Class
  source:
    remote:
      path: Assets/BT-CMS/Scripts/Scriptable Objects/CharacterLayerDefinitionSO.cs
      branch: main
      repo: https://github.com/Legendaryswordsman2/BlazerTech-Character-Management-System.git
    id: CharacterLayerDefinitionSO
    path: ../../../Unity/Unity Projects/BlazerTech Character Management System/Assets/BT-CMS/Scripts/Scriptable Objects/CharacterLayerDefinitionSO.cs
    startLine: 17
  assemblies:
  - Assembly-CSharp
  namespace: BlazerTech.CharacterManagement.Characters
  syntax:
    content: >-
      [CreateAssetMenu(menuName = "BlazerTech/Character Management System/Layered Character Type/Layer Definition", fileName = "New Character Layer")]

      public class CharacterLayerDefinitionSO : ScriptableObject, IValidatable
    content.vb: >-
      <CreateAssetMenu(menuName:="BlazerTech/Character Management System/Layered Character Type/Layer Definition", fileName:="New Character Layer")>

      Public Class CharacterLayerDefinitionSO Inherits ScriptableObject Implements IValidatable
  inheritance:
  - System.Object
  - UnityEngine.Object
  - UnityEngine.ScriptableObject
  implements:
  - BlazerTech.CharacterManagement.Core.IValidatable
  attributes:
  - type: UnityEngine.CreateAssetMenuAttribute
    ctor: UnityEngine.CreateAssetMenuAttribute.#ctor
    arguments: []
    namedArguments:
    - name: menuName
      type: System.String
      value: BlazerTech/Character Management System/Layered Character Type/Layer Definition
    - name: fileName
      type: System.String
      value: New Character Layer
- uid: BlazerTech.CharacterManagement.Characters.CharacterLayerDefinitionSO.AttachedCharacterType
  commentId: P:BlazerTech.CharacterManagement.Characters.CharacterLayerDefinitionSO.AttachedCharacterType
  id: AttachedCharacterType
  parent: BlazerTech.CharacterManagement.Characters.CharacterLayerDefinitionSO
  langs:
  - csharp
  - vb
  name: AttachedCharacterType
  nameWithType: CharacterLayerDefinitionSO.AttachedCharacterType
  fullName: BlazerTech.CharacterManagement.Characters.CharacterLayerDefinitionSO.AttachedCharacterType
  type: Property
  source:
    remote:
      path: Assets/BT-CMS/Scripts/Scriptable Objects/CharacterLayerDefinitionSO.cs
      branch: main
      repo: https://github.com/Legendaryswordsman2/BlazerTech-Character-Management-System.git
    id: AttachedCharacterType
    path: ../../../Unity/Unity Projects/BlazerTech Character Management System/Assets/BT-CMS/Scripts/Scriptable Objects/CharacterLayerDefinitionSO.cs
    startLine: 20
  assemblies:
  - Assembly-CSharp
  namespace: BlazerTech.CharacterManagement.Characters
  syntax:
    content: public LayeredCharacterTypeSO AttachedCharacterType { get; }
    parameters: []
    return:
      type: BlazerTech.CharacterManagement.Characters.LayeredCharacterTypeSO
    content.vb: Public Property AttachedCharacterType As LayeredCharacterTypeSO
  overload: BlazerTech.CharacterManagement.Characters.CharacterLayerDefinitionSO.AttachedCharacterType*
- uid: BlazerTech.CharacterManagement.Characters.CharacterLayerDefinitionSO.LayerName
  commentId: P:BlazerTech.CharacterManagement.Characters.CharacterLayerDefinitionSO.LayerName
  id: LayerName
  parent: BlazerTech.CharacterManagement.Characters.CharacterLayerDefinitionSO
  langs:
  - csharp
  - vb
  name: LayerName
  nameWithType: CharacterLayerDefinitionSO.LayerName
  fullName: BlazerTech.CharacterManagement.Characters.CharacterLayerDefinitionSO.LayerName
  type: Property
  source:
    remote:
      path: Assets/BT-CMS/Scripts/Scriptable Objects/CharacterLayerDefinitionSO.cs
      branch: main
      repo: https://github.com/Legendaryswordsman2/BlazerTech-Character-Management-System.git
    id: LayerName
    path: ../../../Unity/Unity Projects/BlazerTech Character Management System/Assets/BT-CMS/Scripts/Scriptable Objects/CharacterLayerDefinitionSO.cs
    startLine: 27
  assemblies:
  - Assembly-CSharp
  namespace: BlazerTech.CharacterManagement.Characters
  summary: The name used for the layer. Does NOT need to be unique.
  remarks: Used when displaying layer names in the Character Creator.
  example: []
  syntax:
    content: public string LayerName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property LayerName As String
  overload: BlazerTech.CharacterManagement.Characters.CharacterLayerDefinitionSO.LayerName*
- uid: BlazerTech.CharacterManagement.Characters.CharacterLayerDefinitionSO.IncludeNoneOption
  commentId: P:BlazerTech.CharacterManagement.Characters.CharacterLayerDefinitionSO.IncludeNoneOption
  id: IncludeNoneOption
  parent: BlazerTech.CharacterManagement.Characters.CharacterLayerDefinitionSO
  langs:
  - csharp
  - vb
  name: IncludeNoneOption
  nameWithType: CharacterLayerDefinitionSO.IncludeNoneOption
  fullName: BlazerTech.CharacterManagement.Characters.CharacterLayerDefinitionSO.IncludeNoneOption
  type: Property
  source:
    remote:
      path: Assets/BT-CMS/Scripts/Scriptable Objects/CharacterLayerDefinitionSO.cs
      branch: main
      repo: https://github.com/Legendaryswordsman2/BlazerTech-Character-Management-System.git
    id: IncludeNoneOption
    path: ../../../Unity/Unity Projects/BlazerTech Character Management System/Assets/BT-CMS/Scripts/Scriptable Objects/CharacterLayerDefinitionSO.cs
    startLine: 39
  assemblies:
  - Assembly-CSharp
  namespace: BlazerTech.CharacterManagement.Characters
  summary: If toggled, adds a 'None' option as the first layer option. Applies immediately when toggled and when <xref href="BlazerTech.CharacterManagement.Characters.CharacterLayerDefinitionSO.CollectLayerOptions_EditMode" data-throw-if-not-resolved="false"></xref> is run.
  example: []
  syntax:
    content: public bool IncludeNoneOption { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IncludeNoneOption As Boolean
  overload: BlazerTech.CharacterManagement.Characters.CharacterLayerDefinitionSO.IncludeNoneOption*
- uid: BlazerTech.CharacterManagement.Characters.CharacterLayerDefinitionSO.LayerOptions
  commentId: P:BlazerTech.CharacterManagement.Characters.CharacterLayerDefinitionSO.LayerOptions
  id: LayerOptions
  parent: BlazerTech.CharacterManagement.Characters.CharacterLayerDefinitionSO
  langs:
  - csharp
  - vb
  name: LayerOptions
  nameWithType: CharacterLayerDefinitionSO.LayerOptions
  fullName: BlazerTech.CharacterManagement.Characters.CharacterLayerDefinitionSO.LayerOptions
  type: Property
  source:
    remote:
      path: Assets/BT-CMS/Scripts/Scriptable Objects/CharacterLayerDefinitionSO.cs
      branch: main
      repo: https://github.com/Legendaryswordsman2/BlazerTech-Character-Management-System.git
    id: LayerOptions
    path: ../../../Unity/Unity Projects/BlazerTech Character Management System/Assets/BT-CMS/Scripts/Scriptable Objects/CharacterLayerDefinitionSO.cs
    startLine: 54
  assemblies:
  - Assembly-CSharp
  namespace: BlazerTech.CharacterManagement.Characters
  syntax:
    content: public IReadOnlyList<CharacterLayerOption> LayerOptions { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IReadOnlyList{BlazerTech.CharacterManagement.Characters.CharacterLayerOption}
    content.vb: Public ReadOnly Property LayerOptions As IReadOnlyList(Of CharacterLayerOption)
  overload: BlazerTech.CharacterManagement.Characters.CharacterLayerDefinitionSO.LayerOptions*
- uid: BlazerTech.CharacterManagement.Characters.CharacterLayerDefinitionSO.IsValid
  commentId: P:BlazerTech.CharacterManagement.Characters.CharacterLayerDefinitionSO.IsValid
  id: IsValid
  parent: BlazerTech.CharacterManagement.Characters.CharacterLayerDefinitionSO
  langs:
  - csharp
  - vb
  name: IsValid
  nameWithType: CharacterLayerDefinitionSO.IsValid
  fullName: BlazerTech.CharacterManagement.Characters.CharacterLayerDefinitionSO.IsValid
  type: Property
  source:
    remote:
      path: Assets/BT-CMS/Scripts/Scriptable Objects/CharacterLayerDefinitionSO.cs
      branch: main
      repo: https://github.com/Legendaryswordsman2/BlazerTech-Character-Management-System.git
    id: IsValid
    path: ../../../Unity/Unity Projects/BlazerTech Character Management System/Assets/BT-CMS/Scripts/Scriptable Objects/CharacterLayerDefinitionSO.cs
    startLine: 56
  assemblies:
  - Assembly-CSharp
  namespace: BlazerTech.CharacterManagement.Characters
  summary: >-
    Gets a value indicating whether the object is currently valid.  

    This value should be updated when <xref href="BlazerTech.CharacterManagement.Core.IValidatable.PerformValidationCheck" data-throw-if-not-resolved="false"></xref> is called.
  example: []
  syntax:
    content: public bool IsValid { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsValid As Boolean
  overload: BlazerTech.CharacterManagement.Characters.CharacterLayerDefinitionSO.IsValid*
  implements:
  - BlazerTech.CharacterManagement.Core.IValidatable.IsValid
- uid: BlazerTech.CharacterManagement.Characters.CharacterLayerDefinitionSO.Initialize(BlazerTech.CharacterManagement.Characters.LayeredCharacterTypeSO)
  commentId: M:BlazerTech.CharacterManagement.Characters.CharacterLayerDefinitionSO.Initialize(BlazerTech.CharacterManagement.Characters.LayeredCharacterTypeSO)
  id: Initialize(BlazerTech.CharacterManagement.Characters.LayeredCharacterTypeSO)
  parent: BlazerTech.CharacterManagement.Characters.CharacterLayerDefinitionSO
  langs:
  - csharp
  - vb
  name: Initialize(LayeredCharacterTypeSO)
  nameWithType: CharacterLayerDefinitionSO.Initialize(LayeredCharacterTypeSO)
  fullName: BlazerTech.CharacterManagement.Characters.CharacterLayerDefinitionSO.Initialize(BlazerTech.CharacterManagement.Characters.LayeredCharacterTypeSO)
  type: Method
  source:
    remote:
      path: Assets/BT-CMS/Scripts/Scriptable Objects/CharacterLayerDefinitionSO.cs
      branch: main
      repo: https://github.com/Legendaryswordsman2/BlazerTech-Character-Management-System.git
    id: Initialize
    path: ../../../Unity/Unity Projects/BlazerTech Character Management System/Assets/BT-CMS/Scripts/Scriptable Objects/CharacterLayerDefinitionSO.cs
    startLine: 65
  assemblies:
  - Assembly-CSharp
  namespace: BlazerTech.CharacterManagement.Characters
  example: []
  syntax:
    content: public bool Initialize(LayeredCharacterTypeSO characterType)
    parameters:
    - id: characterType
      type: BlazerTech.CharacterManagement.Characters.LayeredCharacterTypeSO
      description: The <xref href="BlazerTech.CharacterManagement.Characters.LayeredCharacterTypeSO" data-throw-if-not-resolved="false"></xref> used to initialize the layer.
    return:
      type: System.Boolean
      description: True if the layer was able to initialize properly. Otherwise, False.
    content.vb: Public Function Initialize(characterType As LayeredCharacterTypeSO) As Boolean
  overload: BlazerTech.CharacterManagement.Characters.CharacterLayerDefinitionSO.Initialize*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: Thrown when <xref href="BlazerTech.CharacterManagement.Characters.CharacterLayerDefinitionSO.AttachedCharacterType" data-throw-if-not-resolved="false"></xref> is null.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown when <code class="paramref">characterType</code> is null.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: Thrown when the <code class="paramref">characterType</code> is different from the one used in the layer.
- uid: BlazerTech.CharacterManagement.Characters.CharacterLayerDefinitionSO.PerformValidationCheck
  commentId: M:BlazerTech.CharacterManagement.Characters.CharacterLayerDefinitionSO.PerformValidationCheck
  id: PerformValidationCheck
  parent: BlazerTech.CharacterManagement.Characters.CharacterLayerDefinitionSO
  langs:
  - csharp
  - vb
  name: PerformValidationCheck()
  nameWithType: CharacterLayerDefinitionSO.PerformValidationCheck()
  fullName: BlazerTech.CharacterManagement.Characters.CharacterLayerDefinitionSO.PerformValidationCheck()
  type: Method
  source:
    remote:
      path: Assets/BT-CMS/Scripts/Scriptable Objects/CharacterLayerDefinitionSO.cs
      branch: main
      repo: https://github.com/Legendaryswordsman2/BlazerTech-Character-Management-System.git
    id: PerformValidationCheck
    path: ../../../Unity/Unity Projects/BlazerTech Character Management System/Assets/BT-CMS/Scripts/Scriptable Objects/CharacterLayerDefinitionSO.cs
    startLine: 83
  assemblies:
  - Assembly-CSharp
  namespace: BlazerTech.CharacterManagement.Characters
  summary: Checks/Rechecks if the object is valid and updates <xref href="BlazerTech.CharacterManagement.Core.IValidatable.IsValid" data-throw-if-not-resolved="false"></xref> accordingly.
  example: []
  syntax:
    content: public bool PerformValidationCheck()
    return:
      type: System.Boolean
      description: true if the object is valid after the check; otherwise, false.
    content.vb: Public Function PerformValidationCheck() As Boolean
  overload: BlazerTech.CharacterManagement.Characters.CharacterLayerDefinitionSO.PerformValidationCheck*
  implements:
  - BlazerTech.CharacterManagement.Core.IValidatable.PerformValidationCheck
- uid: BlazerTech.CharacterManagement.Characters.CharacterLayerDefinitionSO.GetLayerOptionFromKey(System.String)
  commentId: M:BlazerTech.CharacterManagement.Characters.CharacterLayerDefinitionSO.GetLayerOptionFromKey(System.String)
  id: GetLayerOptionFromKey(System.String)
  parent: BlazerTech.CharacterManagement.Characters.CharacterLayerDefinitionSO
  langs:
  - csharp
  - vb
  name: GetLayerOptionFromKey(string)
  nameWithType: CharacterLayerDefinitionSO.GetLayerOptionFromKey(string)
  fullName: BlazerTech.CharacterManagement.Characters.CharacterLayerDefinitionSO.GetLayerOptionFromKey(string)
  type: Method
  source:
    remote:
      path: Assets/BT-CMS/Scripts/Scriptable Objects/CharacterLayerDefinitionSO.cs
      branch: main
      repo: https://github.com/Legendaryswordsman2/BlazerTech-Character-Management-System.git
    id: GetLayerOptionFromKey
    path: ../../../Unity/Unity Projects/BlazerTech Character Management System/Assets/BT-CMS/Scripts/Scriptable Objects/CharacterLayerDefinitionSO.cs
    startLine: 96
  assemblies:
  - Assembly-CSharp
  namespace: BlazerTech.CharacterManagement.Characters
  syntax:
    content: public CharacterLayerOption GetLayerOptionFromKey(string key)
    parameters:
    - id: key
      type: System.String
    return:
      type: BlazerTech.CharacterManagement.Characters.CharacterLayerOption
    content.vb: Public Function GetLayerOptionFromKey(key As String) As CharacterLayerOption
  overload: BlazerTech.CharacterManagement.Characters.CharacterLayerDefinitionSO.GetLayerOptionFromKey*
  nameWithType.vb: CharacterLayerDefinitionSO.GetLayerOptionFromKey(String)
  fullName.vb: BlazerTech.CharacterManagement.Characters.CharacterLayerDefinitionSO.GetLayerOptionFromKey(String)
  name.vb: GetLayerOptionFromKey(String)
- uid: BlazerTech.CharacterManagement.Characters.CharacterLayerDefinitionSO.GetLayerOptionFromSpritesheetName(System.String)
  commentId: M:BlazerTech.CharacterManagement.Characters.CharacterLayerDefinitionSO.GetLayerOptionFromSpritesheetName(System.String)
  id: GetLayerOptionFromSpritesheetName(System.String)
  parent: BlazerTech.CharacterManagement.Characters.CharacterLayerDefinitionSO
  langs:
  - csharp
  - vb
  name: GetLayerOptionFromSpritesheetName(string)
  nameWithType: CharacterLayerDefinitionSO.GetLayerOptionFromSpritesheetName(string)
  fullName: BlazerTech.CharacterManagement.Characters.CharacterLayerDefinitionSO.GetLayerOptionFromSpritesheetName(string)
  type: Method
  source:
    remote:
      path: Assets/BT-CMS/Scripts/Scriptable Objects/CharacterLayerDefinitionSO.cs
      branch: main
      repo: https://github.com/Legendaryswordsman2/BlazerTech-Character-Management-System.git
    id: GetLayerOptionFromSpritesheetName
    path: ../../../Unity/Unity Projects/BlazerTech Character Management System/Assets/BT-CMS/Scripts/Scriptable Objects/CharacterLayerDefinitionSO.cs
    startLine: 98
  assemblies:
  - Assembly-CSharp
  namespace: BlazerTech.CharacterManagement.Characters
  syntax:
    content: public CharacterLayerOption GetLayerOptionFromSpritesheetName(string spritesheetName)
    parameters:
    - id: spritesheetName
      type: System.String
    return:
      type: BlazerTech.CharacterManagement.Characters.CharacterLayerOption
    content.vb: Public Function GetLayerOptionFromSpritesheetName(spritesheetName As String) As CharacterLayerOption
  overload: BlazerTech.CharacterManagement.Characters.CharacterLayerDefinitionSO.GetLayerOptionFromSpritesheetName*
  nameWithType.vb: CharacterLayerDefinitionSO.GetLayerOptionFromSpritesheetName(String)
  fullName.vb: BlazerTech.CharacterManagement.Characters.CharacterLayerDefinitionSO.GetLayerOptionFromSpritesheetName(String)
  name.vb: GetLayerOptionFromSpritesheetName(String)
- uid: BlazerTech.CharacterManagement.Characters.CharacterLayerDefinitionSO.GetLayerOptionFromIndex(System.Int32)
  commentId: M:BlazerTech.CharacterManagement.Characters.CharacterLayerDefinitionSO.GetLayerOptionFromIndex(System.Int32)
  id: GetLayerOptionFromIndex(System.Int32)
  parent: BlazerTech.CharacterManagement.Characters.CharacterLayerDefinitionSO
  langs:
  - csharp
  - vb
  name: GetLayerOptionFromIndex(int)
  nameWithType: CharacterLayerDefinitionSO.GetLayerOptionFromIndex(int)
  fullName: BlazerTech.CharacterManagement.Characters.CharacterLayerDefinitionSO.GetLayerOptionFromIndex(int)
  type: Method
  source:
    remote:
      path: Assets/BT-CMS/Scripts/Scriptable Objects/CharacterLayerDefinitionSO.cs
      branch: main
      repo: https://github.com/Legendaryswordsman2/BlazerTech-Character-Management-System.git
    id: GetLayerOptionFromIndex
    path: ../../../Unity/Unity Projects/BlazerTech Character Management System/Assets/BT-CMS/Scripts/Scriptable Objects/CharacterLayerDefinitionSO.cs
    startLine: 100
  assemblies:
  - Assembly-CSharp
  namespace: BlazerTech.CharacterManagement.Characters
  syntax:
    content: public CharacterLayerOption GetLayerOptionFromIndex(int index)
    parameters:
    - id: index
      type: System.Int32
    return:
      type: BlazerTech.CharacterManagement.Characters.CharacterLayerOption
    content.vb: Public Function GetLayerOptionFromIndex(index As Integer) As CharacterLayerOption
  overload: BlazerTech.CharacterManagement.Characters.CharacterLayerDefinitionSO.GetLayerOptionFromIndex*
  nameWithType.vb: CharacterLayerDefinitionSO.GetLayerOptionFromIndex(Integer)
  fullName.vb: BlazerTech.CharacterManagement.Characters.CharacterLayerDefinitionSO.GetLayerOptionFromIndex(Integer)
  name.vb: GetLayerOptionFromIndex(Integer)
- uid: BlazerTech.CharacterManagement.Characters.CharacterLayerDefinitionSO.GetRandomLayerOption
  commentId: M:BlazerTech.CharacterManagement.Characters.CharacterLayerDefinitionSO.GetRandomLayerOption
  id: GetRandomLayerOption
  parent: BlazerTech.CharacterManagement.Characters.CharacterLayerDefinitionSO
  langs:
  - csharp
  - vb
  name: GetRandomLayerOption()
  nameWithType: CharacterLayerDefinitionSO.GetRandomLayerOption()
  fullName: BlazerTech.CharacterManagement.Characters.CharacterLayerDefinitionSO.GetRandomLayerOption()
  type: Method
  source:
    remote:
      path: Assets/BT-CMS/Scripts/Scriptable Objects/CharacterLayerDefinitionSO.cs
      branch: main
      repo: https://github.com/Legendaryswordsman2/BlazerTech-Character-Management-System.git
    id: GetRandomLayerOption
    path: ../../../Unity/Unity Projects/BlazerTech Character Management System/Assets/BT-CMS/Scripts/Scriptable Objects/CharacterLayerDefinitionSO.cs
    startLine: 117
  assemblies:
  - Assembly-CSharp
  namespace: BlazerTech.CharacterManagement.Characters
  syntax:
    content: public CharacterLayerOption GetRandomLayerOption()
    return:
      type: BlazerTech.CharacterManagement.Characters.CharacterLayerOption
    content.vb: Public Function GetRandomLayerOption() As CharacterLayerOption
  overload: BlazerTech.CharacterManagement.Characters.CharacterLayerDefinitionSO.GetRandomLayerOption*
- uid: BlazerTech.CharacterManagement.Characters.CharacterLayerDefinitionSO.IsInitialized
  commentId: M:BlazerTech.CharacterManagement.Characters.CharacterLayerDefinitionSO.IsInitialized
  id: IsInitialized
  parent: BlazerTech.CharacterManagement.Characters.CharacterLayerDefinitionSO
  langs:
  - csharp
  - vb
  name: IsInitialized()
  nameWithType: CharacterLayerDefinitionSO.IsInitialized()
  fullName: BlazerTech.CharacterManagement.Characters.CharacterLayerDefinitionSO.IsInitialized()
  type: Method
  source:
    remote:
      path: Assets/BT-CMS/Scripts/Scriptable Objects/CharacterLayerDefinitionSO.cs
      branch: main
      repo: https://github.com/Legendaryswordsman2/BlazerTech-Character-Management-System.git
    id: IsInitialized
    path: ../../../Unity/Unity Projects/BlazerTech Character Management System/Assets/BT-CMS/Scripts/Scriptable Objects/CharacterLayerDefinitionSO.cs
    startLine: 119
  assemblies:
  - Assembly-CSharp
  namespace: BlazerTech.CharacterManagement.Characters
  syntax:
    content: public bool IsInitialized()
    return:
      type: System.Boolean
    content.vb: Public Function IsInitialized() As Boolean
  overload: BlazerTech.CharacterManagement.Characters.CharacterLayerDefinitionSO.IsInitialized*
- uid: BlazerTech.CharacterManagement.Characters.CharacterLayerDefinitionSO.AcquireAllLayerOptionsAsync(System.Action{System.Single})
  commentId: M:BlazerTech.CharacterManagement.Characters.CharacterLayerDefinitionSO.AcquireAllLayerOptionsAsync(System.Action{System.Single})
  id: AcquireAllLayerOptionsAsync(System.Action{System.Single})
  parent: BlazerTech.CharacterManagement.Characters.CharacterLayerDefinitionSO
  langs:
  - csharp
  - vb
  name: AcquireAllLayerOptionsAsync(Action<float>)
  nameWithType: CharacterLayerDefinitionSO.AcquireAllLayerOptionsAsync(Action<float>)
  fullName: BlazerTech.CharacterManagement.Characters.CharacterLayerDefinitionSO.AcquireAllLayerOptionsAsync(System.Action<float>)
  type: Method
  source:
    remote:
      path: Assets/BT-CMS/Scripts/Scriptable Objects/CharacterLayerDefinitionSO.cs
      branch: main
      repo: https://github.com/Legendaryswordsman2/BlazerTech-Character-Management-System.git
    id: AcquireAllLayerOptionsAsync
    path: ../../../Unity/Unity Projects/BlazerTech Character Management System/Assets/BT-CMS/Scripts/Scriptable Objects/CharacterLayerDefinitionSO.cs
    startLine: 121
  assemblies:
  - Assembly-CSharp
  namespace: BlazerTech.CharacterManagement.Characters
  syntax:
    content: public Task AcquireAllLayerOptionsAsync(Action<float> onProgress = null)
    parameters:
    - id: onProgress
      type: System.Action{System.Single}
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function AcquireAllLayerOptionsAsync(onProgress As Action(Of Single) = Nothing) As Task
  overload: BlazerTech.CharacterManagement.Characters.CharacterLayerDefinitionSO.AcquireAllLayerOptionsAsync*
  nameWithType.vb: CharacterLayerDefinitionSO.AcquireAllLayerOptionsAsync(Action(Of Single))
  fullName.vb: BlazerTech.CharacterManagement.Characters.CharacterLayerDefinitionSO.AcquireAllLayerOptionsAsync(System.Action(Of Single))
  name.vb: AcquireAllLayerOptionsAsync(Action(Of Single))
- uid: BlazerTech.CharacterManagement.Characters.CharacterLayerDefinitionSO.ReleaseAllLayerOptions
  commentId: M:BlazerTech.CharacterManagement.Characters.CharacterLayerDefinitionSO.ReleaseAllLayerOptions
  id: ReleaseAllLayerOptions
  parent: BlazerTech.CharacterManagement.Characters.CharacterLayerDefinitionSO
  langs:
  - csharp
  - vb
  name: ReleaseAllLayerOptions()
  nameWithType: CharacterLayerDefinitionSO.ReleaseAllLayerOptions()
  fullName: BlazerTech.CharacterManagement.Characters.CharacterLayerDefinitionSO.ReleaseAllLayerOptions()
  type: Method
  source:
    remote:
      path: Assets/BT-CMS/Scripts/Scriptable Objects/CharacterLayerDefinitionSO.cs
      branch: main
      repo: https://github.com/Legendaryswordsman2/BlazerTech-Character-Management-System.git
    id: ReleaseAllLayerOptions
    path: ../../../Unity/Unity Projects/BlazerTech Character Management System/Assets/BT-CMS/Scripts/Scriptable Objects/CharacterLayerDefinitionSO.cs
    startLine: 148
  assemblies:
  - Assembly-CSharp
  namespace: BlazerTech.CharacterManagement.Characters
  syntax:
    content: public void ReleaseAllLayerOptions()
    content.vb: Public Sub ReleaseAllLayerOptions()
  overload: BlazerTech.CharacterManagement.Characters.CharacterLayerDefinitionSO.ReleaseAllLayerOptions*
- uid: BlazerTech.CharacterManagement.Characters.CharacterLayerDefinitionSO.CollectLayerOptions_EditMode
  commentId: M:BlazerTech.CharacterManagement.Characters.CharacterLayerDefinitionSO.CollectLayerOptions_EditMode
  id: CollectLayerOptions_EditMode
  parent: BlazerTech.CharacterManagement.Characters.CharacterLayerDefinitionSO
  langs:
  - csharp
  - vb
  name: CollectLayerOptions_EditMode()
  nameWithType: CharacterLayerDefinitionSO.CollectLayerOptions_EditMode()
  fullName: BlazerTech.CharacterManagement.Characters.CharacterLayerDefinitionSO.CollectLayerOptions_EditMode()
  type: Method
  source:
    remote:
      path: Assets/BT-CMS/Scripts/Scriptable Objects/CharacterLayerDefinitionSO.cs
      branch: main
      repo: https://github.com/Legendaryswordsman2/BlazerTech-Character-Management-System.git
    id: CollectLayerOptions_EditMode
    path: ../../../Unity/Unity Projects/BlazerTech Character Management System/Assets/BT-CMS/Scripts/Scriptable Objects/CharacterLayerDefinitionSO.cs
    startLine: 169
  assemblies:
  - Assembly-CSharp
  namespace: BlazerTech.CharacterManagement.Characters
  syntax:
    content: >-
      [Button("Collect Layer Options", EButtonEnableMode.Editor)]

      public void CollectLayerOptions_EditMode()
    content.vb: >-
      <Button("Collect Layer Options", EButtonEnableMode.Editor)>

      Public Sub CollectLayerOptions_EditMode()
  overload: BlazerTech.CharacterManagement.Characters.CharacterLayerDefinitionSO.CollectLayerOptions_EditMode*
  attributes:
  - type: NaughtyAttributes.ButtonAttribute
    ctor: NaughtyAttributes.ButtonAttribute.#ctor(System.String,NaughtyAttributes.EButtonEnableMode)
    arguments:
    - type: System.String
      value: Collect Layer Options
    - type: NaughtyAttributes.EButtonEnableMode
      value: 1
references:
- uid: BlazerTech.CharacterManagement.Characters
  commentId: N:BlazerTech.CharacterManagement.Characters
  href: BlazerTech.html
  name: BlazerTech.CharacterManagement.Characters
  nameWithType: BlazerTech.CharacterManagement.Characters
  fullName: BlazerTech.CharacterManagement.Characters
  spec.csharp:
  - uid: BlazerTech
    name: BlazerTech
    href: BlazerTech.html
  - name: .
  - uid: BlazerTech.CharacterManagement
    name: CharacterManagement
    href: BlazerTech.CharacterManagement.html
  - name: .
  - uid: BlazerTech.CharacterManagement.Characters
    name: Characters
    href: BlazerTech.CharacterManagement.Characters.html
  spec.vb:
  - uid: BlazerTech
    name: BlazerTech
    href: BlazerTech.html
  - name: .
  - uid: BlazerTech.CharacterManagement
    name: CharacterManagement
    href: BlazerTech.CharacterManagement.html
  - name: .
  - uid: BlazerTech.CharacterManagement.Characters
    name: Characters
    href: BlazerTech.CharacterManagement.Characters.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: UnityEngine.Object
  commentId: T:UnityEngine.Object
  parent: UnityEngine
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: UnityEngine.Object
- uid: UnityEngine.ScriptableObject
  commentId: T:UnityEngine.ScriptableObject
  parent: UnityEngine
  isExternal: true
  name: ScriptableObject
  nameWithType: ScriptableObject
  fullName: UnityEngine.ScriptableObject
- uid: BlazerTech.CharacterManagement.Core.IValidatable
  commentId: T:BlazerTech.CharacterManagement.Core.IValidatable
  parent: BlazerTech.CharacterManagement.Core
  href: BlazerTech.CharacterManagement.Core.IValidatable.html
  name: IValidatable
  nameWithType: IValidatable
  fullName: BlazerTech.CharacterManagement.Core.IValidatable
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: BlazerTech.CharacterManagement.Core
  commentId: N:BlazerTech.CharacterManagement.Core
  href: BlazerTech.html
  name: BlazerTech.CharacterManagement.Core
  nameWithType: BlazerTech.CharacterManagement.Core
  fullName: BlazerTech.CharacterManagement.Core
  spec.csharp:
  - uid: BlazerTech
    name: BlazerTech
    href: BlazerTech.html
  - name: .
  - uid: BlazerTech.CharacterManagement
    name: CharacterManagement
    href: BlazerTech.CharacterManagement.html
  - name: .
  - uid: BlazerTech.CharacterManagement.Core
    name: Core
    href: BlazerTech.CharacterManagement.Core.html
  spec.vb:
  - uid: BlazerTech
    name: BlazerTech
    href: BlazerTech.html
  - name: .
  - uid: BlazerTech.CharacterManagement
    name: CharacterManagement
    href: BlazerTech.CharacterManagement.html
  - name: .
  - uid: BlazerTech.CharacterManagement.Core
    name: Core
    href: BlazerTech.CharacterManagement.Core.html
- uid: BlazerTech.CharacterManagement.Characters.CharacterLayerDefinitionSO.AttachedCharacterType*
  commentId: Overload:BlazerTech.CharacterManagement.Characters.CharacterLayerDefinitionSO.AttachedCharacterType
  href: BlazerTech.CharacterManagement.Characters.CharacterLayerDefinitionSO.html#BlazerTech_CharacterManagement_Characters_CharacterLayerDefinitionSO_AttachedCharacterType
  name: AttachedCharacterType
  nameWithType: CharacterLayerDefinitionSO.AttachedCharacterType
  fullName: BlazerTech.CharacterManagement.Characters.CharacterLayerDefinitionSO.AttachedCharacterType
- uid: BlazerTech.CharacterManagement.Characters.LayeredCharacterTypeSO
  commentId: T:BlazerTech.CharacterManagement.Characters.LayeredCharacterTypeSO
  parent: BlazerTech.CharacterManagement.Characters
  href: BlazerTech.CharacterManagement.Characters.LayeredCharacterTypeSO.html
  name: LayeredCharacterTypeSO
  nameWithType: LayeredCharacterTypeSO
  fullName: BlazerTech.CharacterManagement.Characters.LayeredCharacterTypeSO
- uid: BlazerTech.CharacterManagement.Characters.CharacterLayerDefinitionSO.LayerName*
  commentId: Overload:BlazerTech.CharacterManagement.Characters.CharacterLayerDefinitionSO.LayerName
  href: BlazerTech.CharacterManagement.Characters.CharacterLayerDefinitionSO.html#BlazerTech_CharacterManagement_Characters_CharacterLayerDefinitionSO_LayerName
  name: LayerName
  nameWithType: CharacterLayerDefinitionSO.LayerName
  fullName: BlazerTech.CharacterManagement.Characters.CharacterLayerDefinitionSO.LayerName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: BlazerTech.CharacterManagement.Characters.CharacterLayerDefinitionSO.CollectLayerOptions_EditMode
  commentId: M:BlazerTech.CharacterManagement.Characters.CharacterLayerDefinitionSO.CollectLayerOptions_EditMode
  href: BlazerTech.CharacterManagement.Characters.CharacterLayerDefinitionSO.html#BlazerTech_CharacterManagement_Characters_CharacterLayerDefinitionSO_CollectLayerOptions_EditMode
  name: CollectLayerOptions_EditMode()
  nameWithType: CharacterLayerDefinitionSO.CollectLayerOptions_EditMode()
  fullName: BlazerTech.CharacterManagement.Characters.CharacterLayerDefinitionSO.CollectLayerOptions_EditMode()
  spec.csharp:
  - uid: BlazerTech.CharacterManagement.Characters.CharacterLayerDefinitionSO.CollectLayerOptions_EditMode
    name: CollectLayerOptions_EditMode
    href: BlazerTech.CharacterManagement.Characters.CharacterLayerDefinitionSO.html#BlazerTech_CharacterManagement_Characters_CharacterLayerDefinitionSO_CollectLayerOptions_EditMode
  - name: (
  - name: )
  spec.vb:
  - uid: BlazerTech.CharacterManagement.Characters.CharacterLayerDefinitionSO.CollectLayerOptions_EditMode
    name: CollectLayerOptions_EditMode
    href: BlazerTech.CharacterManagement.Characters.CharacterLayerDefinitionSO.html#BlazerTech_CharacterManagement_Characters_CharacterLayerDefinitionSO_CollectLayerOptions_EditMode
  - name: (
  - name: )
- uid: BlazerTech.CharacterManagement.Characters.CharacterLayerDefinitionSO.IncludeNoneOption*
  commentId: Overload:BlazerTech.CharacterManagement.Characters.CharacterLayerDefinitionSO.IncludeNoneOption
  href: BlazerTech.CharacterManagement.Characters.CharacterLayerDefinitionSO.html#BlazerTech_CharacterManagement_Characters_CharacterLayerDefinitionSO_IncludeNoneOption
  name: IncludeNoneOption
  nameWithType: CharacterLayerDefinitionSO.IncludeNoneOption
  fullName: BlazerTech.CharacterManagement.Characters.CharacterLayerDefinitionSO.IncludeNoneOption
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: BlazerTech.CharacterManagement.Characters.CharacterLayerDefinitionSO.LayerOptions*
  commentId: Overload:BlazerTech.CharacterManagement.Characters.CharacterLayerDefinitionSO.LayerOptions
  href: BlazerTech.CharacterManagement.Characters.CharacterLayerDefinitionSO.html#BlazerTech_CharacterManagement_Characters_CharacterLayerDefinitionSO_LayerOptions
  name: LayerOptions
  nameWithType: CharacterLayerDefinitionSO.LayerOptions
  fullName: BlazerTech.CharacterManagement.Characters.CharacterLayerDefinitionSO.LayerOptions
- uid: System.Collections.Generic.IReadOnlyList{BlazerTech.CharacterManagement.Characters.CharacterLayerOption}
  commentId: T:System.Collections.Generic.IReadOnlyList{BlazerTech.CharacterManagement.Characters.CharacterLayerOption}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyList`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  name: IReadOnlyList<CharacterLayerOption>
  nameWithType: IReadOnlyList<CharacterLayerOption>
  fullName: System.Collections.Generic.IReadOnlyList<BlazerTech.CharacterManagement.Characters.CharacterLayerOption>
  nameWithType.vb: IReadOnlyList(Of CharacterLayerOption)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of BlazerTech.CharacterManagement.Characters.CharacterLayerOption)
  name.vb: IReadOnlyList(Of CharacterLayerOption)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: <
  - uid: BlazerTech.CharacterManagement.Characters.CharacterLayerOption
    name: CharacterLayerOption
    href: BlazerTech.CharacterManagement.Characters.CharacterLayerOption.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: (
  - name: Of
  - name: " "
  - uid: BlazerTech.CharacterManagement.Characters.CharacterLayerOption
    name: CharacterLayerOption
    href: BlazerTech.CharacterManagement.Characters.CharacterLayerOption.html
  - name: )
- uid: System.Collections.Generic.IReadOnlyList`1
  commentId: T:System.Collections.Generic.IReadOnlyList`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  name: IReadOnlyList<T>
  nameWithType: IReadOnlyList<T>
  fullName: System.Collections.Generic.IReadOnlyList<T>
  nameWithType.vb: IReadOnlyList(Of T)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of T)
  name.vb: IReadOnlyList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: BlazerTech.CharacterManagement.Core.IValidatable.PerformValidationCheck
  commentId: M:BlazerTech.CharacterManagement.Core.IValidatable.PerformValidationCheck
  parent: BlazerTech.CharacterManagement.Core.IValidatable
  href: BlazerTech.CharacterManagement.Core.IValidatable.html#BlazerTech_CharacterManagement_Core_IValidatable_PerformValidationCheck
  name: PerformValidationCheck()
  nameWithType: IValidatable.PerformValidationCheck()
  fullName: BlazerTech.CharacterManagement.Core.IValidatable.PerformValidationCheck()
  spec.csharp:
  - uid: BlazerTech.CharacterManagement.Core.IValidatable.PerformValidationCheck
    name: PerformValidationCheck
    href: BlazerTech.CharacterManagement.Core.IValidatable.html#BlazerTech_CharacterManagement_Core_IValidatable_PerformValidationCheck
  - name: (
  - name: )
  spec.vb:
  - uid: BlazerTech.CharacterManagement.Core.IValidatable.PerformValidationCheck
    name: PerformValidationCheck
    href: BlazerTech.CharacterManagement.Core.IValidatable.html#BlazerTech_CharacterManagement_Core_IValidatable_PerformValidationCheck
  - name: (
  - name: )
- uid: BlazerTech.CharacterManagement.Characters.CharacterLayerDefinitionSO.IsValid*
  commentId: Overload:BlazerTech.CharacterManagement.Characters.CharacterLayerDefinitionSO.IsValid
  href: BlazerTech.CharacterManagement.Characters.CharacterLayerDefinitionSO.html#BlazerTech_CharacterManagement_Characters_CharacterLayerDefinitionSO_IsValid
  name: IsValid
  nameWithType: CharacterLayerDefinitionSO.IsValid
  fullName: BlazerTech.CharacterManagement.Characters.CharacterLayerDefinitionSO.IsValid
- uid: BlazerTech.CharacterManagement.Core.IValidatable.IsValid
  commentId: P:BlazerTech.CharacterManagement.Core.IValidatable.IsValid
  parent: BlazerTech.CharacterManagement.Core.IValidatable
  href: BlazerTech.CharacterManagement.Core.IValidatable.html#BlazerTech_CharacterManagement_Core_IValidatable_IsValid
  name: IsValid
  nameWithType: IValidatable.IsValid
  fullName: BlazerTech.CharacterManagement.Core.IValidatable.IsValid
- uid: BlazerTech.CharacterManagement.Characters.CharacterLayerDefinitionSO.AttachedCharacterType
  commentId: P:BlazerTech.CharacterManagement.Characters.CharacterLayerDefinitionSO.AttachedCharacterType
  href: BlazerTech.CharacterManagement.Characters.CharacterLayerDefinitionSO.html#BlazerTech_CharacterManagement_Characters_CharacterLayerDefinitionSO_AttachedCharacterType
  name: AttachedCharacterType
  nameWithType: CharacterLayerDefinitionSO.AttachedCharacterType
  fullName: BlazerTech.CharacterManagement.Characters.CharacterLayerDefinitionSO.AttachedCharacterType
- uid: System.InvalidOperationException
  commentId: T:System.InvalidOperationException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.invalidoperationexception
  name: InvalidOperationException
  nameWithType: InvalidOperationException
  fullName: System.InvalidOperationException
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentnullexception
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentexception
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: BlazerTech.CharacterManagement.Characters.CharacterLayerDefinitionSO.Initialize*
  commentId: Overload:BlazerTech.CharacterManagement.Characters.CharacterLayerDefinitionSO.Initialize
  href: BlazerTech.CharacterManagement.Characters.CharacterLayerDefinitionSO.html#BlazerTech_CharacterManagement_Characters_CharacterLayerDefinitionSO_Initialize_BlazerTech_CharacterManagement_Characters_LayeredCharacterTypeSO_
  name: Initialize
  nameWithType: CharacterLayerDefinitionSO.Initialize
  fullName: BlazerTech.CharacterManagement.Characters.CharacterLayerDefinitionSO.Initialize
- uid: BlazerTech.CharacterManagement.Characters.CharacterLayerDefinitionSO.PerformValidationCheck*
  commentId: Overload:BlazerTech.CharacterManagement.Characters.CharacterLayerDefinitionSO.PerformValidationCheck
  href: BlazerTech.CharacterManagement.Characters.CharacterLayerDefinitionSO.html#BlazerTech_CharacterManagement_Characters_CharacterLayerDefinitionSO_PerformValidationCheck
  name: PerformValidationCheck
  nameWithType: CharacterLayerDefinitionSO.PerformValidationCheck
  fullName: BlazerTech.CharacterManagement.Characters.CharacterLayerDefinitionSO.PerformValidationCheck
- uid: BlazerTech.CharacterManagement.Characters.CharacterLayerDefinitionSO.GetLayerOptionFromKey*
  commentId: Overload:BlazerTech.CharacterManagement.Characters.CharacterLayerDefinitionSO.GetLayerOptionFromKey
  href: BlazerTech.CharacterManagement.Characters.CharacterLayerDefinitionSO.html#BlazerTech_CharacterManagement_Characters_CharacterLayerDefinitionSO_GetLayerOptionFromKey_System_String_
  name: GetLayerOptionFromKey
  nameWithType: CharacterLayerDefinitionSO.GetLayerOptionFromKey
  fullName: BlazerTech.CharacterManagement.Characters.CharacterLayerDefinitionSO.GetLayerOptionFromKey
- uid: BlazerTech.CharacterManagement.Characters.CharacterLayerOption
  commentId: T:BlazerTech.CharacterManagement.Characters.CharacterLayerOption
  parent: BlazerTech.CharacterManagement.Characters
  href: BlazerTech.CharacterManagement.Characters.CharacterLayerOption.html
  name: CharacterLayerOption
  nameWithType: CharacterLayerOption
  fullName: BlazerTech.CharacterManagement.Characters.CharacterLayerOption
- uid: BlazerTech.CharacterManagement.Characters.CharacterLayerDefinitionSO.GetLayerOptionFromSpritesheetName*
  commentId: Overload:BlazerTech.CharacterManagement.Characters.CharacterLayerDefinitionSO.GetLayerOptionFromSpritesheetName
  href: BlazerTech.CharacterManagement.Characters.CharacterLayerDefinitionSO.html#BlazerTech_CharacterManagement_Characters_CharacterLayerDefinitionSO_GetLayerOptionFromSpritesheetName_System_String_
  name: GetLayerOptionFromSpritesheetName
  nameWithType: CharacterLayerDefinitionSO.GetLayerOptionFromSpritesheetName
  fullName: BlazerTech.CharacterManagement.Characters.CharacterLayerDefinitionSO.GetLayerOptionFromSpritesheetName
- uid: BlazerTech.CharacterManagement.Characters.CharacterLayerDefinitionSO.GetLayerOptionFromIndex*
  commentId: Overload:BlazerTech.CharacterManagement.Characters.CharacterLayerDefinitionSO.GetLayerOptionFromIndex
  href: BlazerTech.CharacterManagement.Characters.CharacterLayerDefinitionSO.html#BlazerTech_CharacterManagement_Characters_CharacterLayerDefinitionSO_GetLayerOptionFromIndex_System_Int32_
  name: GetLayerOptionFromIndex
  nameWithType: CharacterLayerDefinitionSO.GetLayerOptionFromIndex
  fullName: BlazerTech.CharacterManagement.Characters.CharacterLayerDefinitionSO.GetLayerOptionFromIndex
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: BlazerTech.CharacterManagement.Characters.CharacterLayerDefinitionSO.GetRandomLayerOption*
  commentId: Overload:BlazerTech.CharacterManagement.Characters.CharacterLayerDefinitionSO.GetRandomLayerOption
  href: BlazerTech.CharacterManagement.Characters.CharacterLayerDefinitionSO.html#BlazerTech_CharacterManagement_Characters_CharacterLayerDefinitionSO_GetRandomLayerOption
  name: GetRandomLayerOption
  nameWithType: CharacterLayerDefinitionSO.GetRandomLayerOption
  fullName: BlazerTech.CharacterManagement.Characters.CharacterLayerDefinitionSO.GetRandomLayerOption
- uid: BlazerTech.CharacterManagement.Characters.CharacterLayerDefinitionSO.IsInitialized*
  commentId: Overload:BlazerTech.CharacterManagement.Characters.CharacterLayerDefinitionSO.IsInitialized
  href: BlazerTech.CharacterManagement.Characters.CharacterLayerDefinitionSO.html#BlazerTech_CharacterManagement_Characters_CharacterLayerDefinitionSO_IsInitialized
  name: IsInitialized
  nameWithType: CharacterLayerDefinitionSO.IsInitialized
  fullName: BlazerTech.CharacterManagement.Characters.CharacterLayerDefinitionSO.IsInitialized
- uid: BlazerTech.CharacterManagement.Characters.CharacterLayerDefinitionSO.AcquireAllLayerOptionsAsync*
  commentId: Overload:BlazerTech.CharacterManagement.Characters.CharacterLayerDefinitionSO.AcquireAllLayerOptionsAsync
  href: BlazerTech.CharacterManagement.Characters.CharacterLayerDefinitionSO.html#BlazerTech_CharacterManagement_Characters_CharacterLayerDefinitionSO_AcquireAllLayerOptionsAsync_System_Action_System_Single__
  name: AcquireAllLayerOptionsAsync
  nameWithType: CharacterLayerDefinitionSO.AcquireAllLayerOptionsAsync
  fullName: BlazerTech.CharacterManagement.Characters.CharacterLayerDefinitionSO.AcquireAllLayerOptionsAsync
- uid: System.Action{System.Single}
  commentId: T:System.Action{System.Single}
  parent: System
  definition: System.Action`1
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<float>
  nameWithType: Action<float>
  fullName: System.Action<float>
  nameWithType.vb: Action(Of Single)
  fullName.vb: System.Action(Of Single)
  name.vb: Action(Of Single)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: BlazerTech.CharacterManagement.Characters.CharacterLayerDefinitionSO.ReleaseAllLayerOptions*
  commentId: Overload:BlazerTech.CharacterManagement.Characters.CharacterLayerDefinitionSO.ReleaseAllLayerOptions
  href: BlazerTech.CharacterManagement.Characters.CharacterLayerDefinitionSO.html#BlazerTech_CharacterManagement_Characters_CharacterLayerDefinitionSO_ReleaseAllLayerOptions
  name: ReleaseAllLayerOptions
  nameWithType: CharacterLayerDefinitionSO.ReleaseAllLayerOptions
  fullName: BlazerTech.CharacterManagement.Characters.CharacterLayerDefinitionSO.ReleaseAllLayerOptions
- uid: BlazerTech.CharacterManagement.Characters.CharacterLayerDefinitionSO.CollectLayerOptions_EditMode*
  commentId: Overload:BlazerTech.CharacterManagement.Characters.CharacterLayerDefinitionSO.CollectLayerOptions_EditMode
  href: BlazerTech.CharacterManagement.Characters.CharacterLayerDefinitionSO.html#BlazerTech_CharacterManagement_Characters_CharacterLayerDefinitionSO_CollectLayerOptions_EditMode
  name: CollectLayerOptions_EditMode
  nameWithType: CharacterLayerDefinitionSO.CollectLayerOptions_EditMode
  fullName: BlazerTech.CharacterManagement.Characters.CharacterLayerDefinitionSO.CollectLayerOptions_EditMode
