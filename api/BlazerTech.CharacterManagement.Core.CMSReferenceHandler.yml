### YamlMime:ManagedReference
items:
- uid: BlazerTech.CharacterManagement.Core.CMSReferenceHandler
  commentId: T:BlazerTech.CharacterManagement.Core.CMSReferenceHandler
  id: CMSReferenceHandler
  parent: BlazerTech.CharacterManagement.Core
  children:
  - BlazerTech.CharacterManagement.Core.CMSReferenceHandler.CharacterPiecesShaders
  - BlazerTech.CharacterManagement.Core.CMSReferenceHandler.CharacterTypes
  - BlazerTech.CharacterManagement.Core.CMSReferenceHandler.GetCharacterTypeFromIdentifier(System.String)
  - BlazerTech.CharacterManagement.Core.CMSReferenceHandler.GetCharacterTypesAsync
  - BlazerTech.CharacterManagement.Core.CMSReferenceHandler.GetLayeredCharacterGroupTemplates
  - BlazerTech.CharacterManagement.Core.CMSReferenceHandler.GetLayeredCharacterTypes
  - BlazerTech.CharacterManagement.Core.CMSReferenceHandler.Instance
  - BlazerTech.CharacterManagement.Core.CMSReferenceHandler.SetCharacterTypes(BlazerTech.CharacterManagement.Characters.LayeredCharacterTypeSO[])
  - BlazerTech.CharacterManagement.Core.CMSReferenceHandler.UnifiedCharacterMaterial
  langs:
  - csharp
  - vb
  name: CMSReferenceHandler
  nameWithType: CMSReferenceHandler
  fullName: BlazerTech.CharacterManagement.Core.CMSReferenceHandler
  type: Class
  source:
    remote:
      path: Assets/BT-CMS/Scripts/Core/CMSReferenceHandler.cs
      branch: main
      repo: https://github.com/Legendaryswordsman2/BlazerTech-Character-Management-System.git
    id: CMSReferenceHandler
    path: ../../../Unity/Unity Projects/BlazerTech Character Management System/Assets/BT-CMS/Scripts/Core/CMSReferenceHandler.cs
    startLine: 11
  assemblies:
  - Assembly-CSharp
  namespace: BlazerTech.CharacterManagement.Core
  syntax:
    content: >-
      [DefaultExecutionOrder(-200)]

      [DisallowMultipleComponent]

      public class CMSReferenceHandler : MonoBehaviour
    content.vb: >-
      <DefaultExecutionOrder(-200)>

      <DisallowMultipleComponent>

      Public Class CMSReferenceHandler Inherits MonoBehaviour
  inheritance:
  - System.Object
  - UnityEngine.Object
  - UnityEngine.Component
  - UnityEngine.Behaviour
  - UnityEngine.MonoBehaviour
  attributes:
  - type: UnityEngine.DefaultExecutionOrder
    ctor: UnityEngine.DefaultExecutionOrder.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: -200
  - type: UnityEngine.DisallowMultipleComponent
    ctor: UnityEngine.DisallowMultipleComponent.#ctor
    arguments: []
- uid: BlazerTech.CharacterManagement.Core.CMSReferenceHandler.Instance
  commentId: P:BlazerTech.CharacterManagement.Core.CMSReferenceHandler.Instance
  id: Instance
  parent: BlazerTech.CharacterManagement.Core.CMSReferenceHandler
  langs:
  - csharp
  - vb
  name: Instance
  nameWithType: CMSReferenceHandler.Instance
  fullName: BlazerTech.CharacterManagement.Core.CMSReferenceHandler.Instance
  type: Property
  source:
    remote:
      path: Assets/BT-CMS/Scripts/Core/CMSReferenceHandler.cs
      branch: main
      repo: https://github.com/Legendaryswordsman2/BlazerTech-Character-Management-System.git
    id: Instance
    path: ../../../Unity/Unity Projects/BlazerTech Character Management System/Assets/BT-CMS/Scripts/Core/CMSReferenceHandler.cs
    startLine: 15
  assemblies:
  - Assembly-CSharp
  namespace: BlazerTech.CharacterManagement.Core
  syntax:
    content: public static CMSReferenceHandler Instance { get; }
    parameters: []
    return:
      type: BlazerTech.CharacterManagement.Core.CMSReferenceHandler
    content.vb: Public Shared Property Instance As CMSReferenceHandler
  overload: BlazerTech.CharacterManagement.Core.CMSReferenceHandler.Instance*
- uid: BlazerTech.CharacterManagement.Core.CMSReferenceHandler.UnifiedCharacterMaterial
  commentId: P:BlazerTech.CharacterManagement.Core.CMSReferenceHandler.UnifiedCharacterMaterial
  id: UnifiedCharacterMaterial
  parent: BlazerTech.CharacterManagement.Core.CMSReferenceHandler
  langs:
  - csharp
  - vb
  name: UnifiedCharacterMaterial
  nameWithType: CMSReferenceHandler.UnifiedCharacterMaterial
  fullName: BlazerTech.CharacterManagement.Core.CMSReferenceHandler.UnifiedCharacterMaterial
  type: Property
  source:
    remote:
      path: Assets/BT-CMS/Scripts/Core/CMSReferenceHandler.cs
      branch: main
      repo: https://github.com/Legendaryswordsman2/BlazerTech-Character-Management-System.git
    id: UnifiedCharacterMaterial
    path: ../../../Unity/Unity Projects/BlazerTech Character Management System/Assets/BT-CMS/Scripts/Core/CMSReferenceHandler.cs
    startLine: 20
  assemblies:
  - Assembly-CSharp
  namespace: BlazerTech.CharacterManagement.Core
  syntax:
    content: public Material UnifiedCharacterMaterial { get; }
    parameters: []
    return:
      type: UnityEngine.Material
    content.vb: Public Property UnifiedCharacterMaterial As Material
  overload: BlazerTech.CharacterManagement.Core.CMSReferenceHandler.UnifiedCharacterMaterial*
- uid: BlazerTech.CharacterManagement.Core.CMSReferenceHandler.CharacterPiecesShaders
  commentId: P:BlazerTech.CharacterManagement.Core.CMSReferenceHandler.CharacterPiecesShaders
  id: CharacterPiecesShaders
  parent: BlazerTech.CharacterManagement.Core.CMSReferenceHandler
  langs:
  - csharp
  - vb
  name: CharacterPiecesShaders
  nameWithType: CMSReferenceHandler.CharacterPiecesShaders
  fullName: BlazerTech.CharacterManagement.Core.CMSReferenceHandler.CharacterPiecesShaders
  type: Property
  source:
    remote:
      path: Assets/BT-CMS/Scripts/Core/CMSReferenceHandler.cs
      branch: main
      repo: https://github.com/Legendaryswordsman2/BlazerTech-Character-Management-System.git
    id: CharacterPiecesShaders
    path: ../../../Unity/Unity Projects/BlazerTech Character Management System/Assets/BT-CMS/Scripts/Core/CMSReferenceHandler.cs
    startLine: 21
  assemblies:
  - Assembly-CSharp
  namespace: BlazerTech.CharacterManagement.Core
  syntax:
    content: public SerializableDictionary<int, Shader> CharacterPiecesShaders { get; }
    parameters: []
    return:
      type: BlazerTech.CharacterManagement.Core.SerializableDictionary{System.Int32,UnityEngine.Shader}
    content.vb: Public Property CharacterPiecesShaders As SerializableDictionary(Of Integer, Shader)
  overload: BlazerTech.CharacterManagement.Core.CMSReferenceHandler.CharacterPiecesShaders*
- uid: BlazerTech.CharacterManagement.Core.CMSReferenceHandler.CharacterTypes
  commentId: P:BlazerTech.CharacterManagement.Core.CMSReferenceHandler.CharacterTypes
  id: CharacterTypes
  parent: BlazerTech.CharacterManagement.Core.CMSReferenceHandler
  langs:
  - csharp
  - vb
  name: CharacterTypes
  nameWithType: CMSReferenceHandler.CharacterTypes
  fullName: BlazerTech.CharacterManagement.Core.CMSReferenceHandler.CharacterTypes
  type: Property
  source:
    remote:
      path: Assets/BT-CMS/Scripts/Core/CMSReferenceHandler.cs
      branch: main
      repo: https://github.com/Legendaryswordsman2/BlazerTech-Character-Management-System.git
    id: CharacterTypes
    path: ../../../Unity/Unity Projects/BlazerTech Character Management System/Assets/BT-CMS/Scripts/Core/CMSReferenceHandler.cs
    startLine: 22
  assemblies:
  - Assembly-CSharp
  namespace: BlazerTech.CharacterManagement.Core
  syntax:
    content: public LayeredCharacterTypeSO[] CharacterTypes { get; }
    parameters: []
    return:
      type: BlazerTech.CharacterManagement.Characters.LayeredCharacterTypeSO[]
    content.vb: Public Property CharacterTypes As LayeredCharacterTypeSO()
  overload: BlazerTech.CharacterManagement.Core.CMSReferenceHandler.CharacterTypes*
- uid: BlazerTech.CharacterManagement.Core.CMSReferenceHandler.GetLayeredCharacterTypes
  commentId: M:BlazerTech.CharacterManagement.Core.CMSReferenceHandler.GetLayeredCharacterTypes
  id: GetLayeredCharacterTypes
  parent: BlazerTech.CharacterManagement.Core.CMSReferenceHandler
  langs:
  - csharp
  - vb
  name: GetLayeredCharacterTypes()
  nameWithType: CMSReferenceHandler.GetLayeredCharacterTypes()
  fullName: BlazerTech.CharacterManagement.Core.CMSReferenceHandler.GetLayeredCharacterTypes()
  type: Method
  source:
    remote:
      path: Assets/BT-CMS/Scripts/Core/CMSReferenceHandler.cs
      branch: main
      repo: https://github.com/Legendaryswordsman2/BlazerTech-Character-Management-System.git
    id: GetLayeredCharacterTypes
    path: ../../../Unity/Unity Projects/BlazerTech Character Management System/Assets/BT-CMS/Scripts/Core/CMSReferenceHandler.cs
    startLine: 38
  assemblies:
  - Assembly-CSharp
  namespace: BlazerTech.CharacterManagement.Core
  syntax:
    content: public List<LayeredCharacterTypeSO> GetLayeredCharacterTypes()
    return:
      type: System.Collections.Generic.List{BlazerTech.CharacterManagement.Characters.LayeredCharacterTypeSO}
    content.vb: Public Function GetLayeredCharacterTypes() As List(Of LayeredCharacterTypeSO)
  overload: BlazerTech.CharacterManagement.Core.CMSReferenceHandler.GetLayeredCharacterTypes*
- uid: BlazerTech.CharacterManagement.Core.CMSReferenceHandler.GetLayeredCharacterGroupTemplates
  commentId: M:BlazerTech.CharacterManagement.Core.CMSReferenceHandler.GetLayeredCharacterGroupTemplates
  id: GetLayeredCharacterGroupTemplates
  parent: BlazerTech.CharacterManagement.Core.CMSReferenceHandler
  langs:
  - csharp
  - vb
  name: GetLayeredCharacterGroupTemplates()
  nameWithType: CMSReferenceHandler.GetLayeredCharacterGroupTemplates()
  fullName: BlazerTech.CharacterManagement.Core.CMSReferenceHandler.GetLayeredCharacterGroupTemplates()
  type: Method
  source:
    remote:
      path: Assets/BT-CMS/Scripts/Core/CMSReferenceHandler.cs
      branch: main
      repo: https://github.com/Legendaryswordsman2/BlazerTech-Character-Management-System.git
    id: GetLayeredCharacterGroupTemplates
    path: ../../../Unity/Unity Projects/BlazerTech Character Management System/Assets/BT-CMS/Scripts/Core/CMSReferenceHandler.cs
    startLine: 43
  assemblies:
  - Assembly-CSharp
  namespace: BlazerTech.CharacterManagement.Core
  syntax:
    content: public List<LayeredCharacterGroupTemplateSO> GetLayeredCharacterGroupTemplates()
    return:
      type: System.Collections.Generic.List{BlazerTech.CharacterManagement.Characters.LayeredCharacterGroupTemplateSO}
    content.vb: Public Function GetLayeredCharacterGroupTemplates() As List(Of LayeredCharacterGroupTemplateSO)
  overload: BlazerTech.CharacterManagement.Core.CMSReferenceHandler.GetLayeredCharacterGroupTemplates*
- uid: BlazerTech.CharacterManagement.Core.CMSReferenceHandler.GetCharacterTypesAsync
  commentId: M:BlazerTech.CharacterManagement.Core.CMSReferenceHandler.GetCharacterTypesAsync
  id: GetCharacterTypesAsync
  parent: BlazerTech.CharacterManagement.Core.CMSReferenceHandler
  langs:
  - csharp
  - vb
  name: GetCharacterTypesAsync()
  nameWithType: CMSReferenceHandler.GetCharacterTypesAsync()
  fullName: BlazerTech.CharacterManagement.Core.CMSReferenceHandler.GetCharacterTypesAsync()
  type: Method
  source:
    remote:
      path: Assets/BT-CMS/Scripts/Core/CMSReferenceHandler.cs
      branch: main
      repo: https://github.com/Legendaryswordsman2/BlazerTech-Character-Management-System.git
    id: GetCharacterTypesAsync
    path: ../../../Unity/Unity Projects/BlazerTech Character Management System/Assets/BT-CMS/Scripts/Core/CMSReferenceHandler.cs
    startLine: 48
  assemblies:
  - Assembly-CSharp
  namespace: BlazerTech.CharacterManagement.Core
  syntax:
    content: public Task<List<LayeredCharacterTypeSO>> GetCharacterTypesAsync()
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.List{BlazerTech.CharacterManagement.Characters.LayeredCharacterTypeSO}}
    content.vb: Public Function GetCharacterTypesAsync() As Task(Of List(Of LayeredCharacterTypeSO))
  overload: BlazerTech.CharacterManagement.Core.CMSReferenceHandler.GetCharacterTypesAsync*
- uid: BlazerTech.CharacterManagement.Core.CMSReferenceHandler.SetCharacterTypes(BlazerTech.CharacterManagement.Characters.LayeredCharacterTypeSO[])
  commentId: M:BlazerTech.CharacterManagement.Core.CMSReferenceHandler.SetCharacterTypes(BlazerTech.CharacterManagement.Characters.LayeredCharacterTypeSO[])
  id: SetCharacterTypes(BlazerTech.CharacterManagement.Characters.LayeredCharacterTypeSO[])
  parent: BlazerTech.CharacterManagement.Core.CMSReferenceHandler
  langs:
  - csharp
  - vb
  name: SetCharacterTypes(LayeredCharacterTypeSO[])
  nameWithType: CMSReferenceHandler.SetCharacterTypes(LayeredCharacterTypeSO[])
  fullName: BlazerTech.CharacterManagement.Core.CMSReferenceHandler.SetCharacterTypes(BlazerTech.CharacterManagement.Characters.LayeredCharacterTypeSO[])
  type: Method
  source:
    remote:
      path: Assets/BT-CMS/Scripts/Core/CMSReferenceHandler.cs
      branch: main
      repo: https://github.com/Legendaryswordsman2/BlazerTech-Character-Management-System.git
    id: SetCharacterTypes
    path: ../../../Unity/Unity Projects/BlazerTech Character Management System/Assets/BT-CMS/Scripts/Core/CMSReferenceHandler.cs
    startLine: 66
  assemblies:
  - Assembly-CSharp
  namespace: BlazerTech.CharacterManagement.Core
  syntax:
    content: public void SetCharacterTypes(LayeredCharacterTypeSO[] characterTypes)
    parameters:
    - id: characterTypes
      type: BlazerTech.CharacterManagement.Characters.LayeredCharacterTypeSO[]
    content.vb: Public Sub SetCharacterTypes(characterTypes As LayeredCharacterTypeSO())
  overload: BlazerTech.CharacterManagement.Core.CMSReferenceHandler.SetCharacterTypes*
  nameWithType.vb: CMSReferenceHandler.SetCharacterTypes(LayeredCharacterTypeSO())
  fullName.vb: BlazerTech.CharacterManagement.Core.CMSReferenceHandler.SetCharacterTypes(BlazerTech.CharacterManagement.Characters.LayeredCharacterTypeSO())
  name.vb: SetCharacterTypes(LayeredCharacterTypeSO())
- uid: BlazerTech.CharacterManagement.Core.CMSReferenceHandler.GetCharacterTypeFromIdentifier(System.String)
  commentId: M:BlazerTech.CharacterManagement.Core.CMSReferenceHandler.GetCharacterTypeFromIdentifier(System.String)
  id: GetCharacterTypeFromIdentifier(System.String)
  parent: BlazerTech.CharacterManagement.Core.CMSReferenceHandler
  langs:
  - csharp
  - vb
  name: GetCharacterTypeFromIdentifier(string)
  nameWithType: CMSReferenceHandler.GetCharacterTypeFromIdentifier(string)
  fullName: BlazerTech.CharacterManagement.Core.CMSReferenceHandler.GetCharacterTypeFromIdentifier(string)
  type: Method
  source:
    remote:
      path: Assets/BT-CMS/Scripts/Core/CMSReferenceHandler.cs
      branch: main
      repo: https://github.com/Legendaryswordsman2/BlazerTech-Character-Management-System.git
    id: GetCharacterTypeFromIdentifier
    path: ../../../Unity/Unity Projects/BlazerTech Character Management System/Assets/BT-CMS/Scripts/Core/CMSReferenceHandler.cs
    startLine: 77
  assemblies:
  - Assembly-CSharp
  namespace: BlazerTech.CharacterManagement.Core
  syntax:
    content: public LayeredCharacterTypeSO GetCharacterTypeFromIdentifier(string identifier)
    parameters:
    - id: identifier
      type: System.String
    return:
      type: BlazerTech.CharacterManagement.Characters.LayeredCharacterTypeSO
    content.vb: Public Function GetCharacterTypeFromIdentifier(identifier As String) As LayeredCharacterTypeSO
  overload: BlazerTech.CharacterManagement.Core.CMSReferenceHandler.GetCharacterTypeFromIdentifier*
  nameWithType.vb: CMSReferenceHandler.GetCharacterTypeFromIdentifier(String)
  fullName.vb: BlazerTech.CharacterManagement.Core.CMSReferenceHandler.GetCharacterTypeFromIdentifier(String)
  name.vb: GetCharacterTypeFromIdentifier(String)
references:
- uid: BlazerTech.CharacterManagement.Core
  commentId: N:BlazerTech.CharacterManagement.Core
  href: BlazerTech.html
  name: BlazerTech.CharacterManagement.Core
  nameWithType: BlazerTech.CharacterManagement.Core
  fullName: BlazerTech.CharacterManagement.Core
  spec.csharp:
  - uid: BlazerTech
    name: BlazerTech
    href: BlazerTech.html
  - name: .
  - uid: BlazerTech.CharacterManagement
    name: CharacterManagement
    href: BlazerTech.CharacterManagement.html
  - name: .
  - uid: BlazerTech.CharacterManagement.Core
    name: Core
    href: BlazerTech.CharacterManagement.Core.html
  spec.vb:
  - uid: BlazerTech
    name: BlazerTech
    href: BlazerTech.html
  - name: .
  - uid: BlazerTech.CharacterManagement
    name: CharacterManagement
    href: BlazerTech.CharacterManagement.html
  - name: .
  - uid: BlazerTech.CharacterManagement.Core
    name: Core
    href: BlazerTech.CharacterManagement.Core.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: UnityEngine.Object
  commentId: T:UnityEngine.Object
  parent: UnityEngine
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: UnityEngine.Object
- uid: UnityEngine.Component
  commentId: T:UnityEngine.Component
  parent: UnityEngine
  isExternal: true
  name: Component
  nameWithType: Component
  fullName: UnityEngine.Component
- uid: UnityEngine.Behaviour
  commentId: T:UnityEngine.Behaviour
  parent: UnityEngine
  isExternal: true
  name: Behaviour
  nameWithType: Behaviour
  fullName: UnityEngine.Behaviour
- uid: UnityEngine.MonoBehaviour
  commentId: T:UnityEngine.MonoBehaviour
  parent: UnityEngine
  isExternal: true
  name: MonoBehaviour
  nameWithType: MonoBehaviour
  fullName: UnityEngine.MonoBehaviour
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: BlazerTech.CharacterManagement.Core.CMSReferenceHandler.Instance*
  commentId: Overload:BlazerTech.CharacterManagement.Core.CMSReferenceHandler.Instance
  href: BlazerTech.CharacterManagement.Core.CMSReferenceHandler.html#BlazerTech_CharacterManagement_Core_CMSReferenceHandler_Instance
  name: Instance
  nameWithType: CMSReferenceHandler.Instance
  fullName: BlazerTech.CharacterManagement.Core.CMSReferenceHandler.Instance
- uid: BlazerTech.CharacterManagement.Core.CMSReferenceHandler
  commentId: T:BlazerTech.CharacterManagement.Core.CMSReferenceHandler
  parent: BlazerTech.CharacterManagement.Core
  href: BlazerTech.CharacterManagement.Core.CMSReferenceHandler.html
  name: CMSReferenceHandler
  nameWithType: CMSReferenceHandler
  fullName: BlazerTech.CharacterManagement.Core.CMSReferenceHandler
- uid: BlazerTech.CharacterManagement.Core.CMSReferenceHandler.UnifiedCharacterMaterial*
  commentId: Overload:BlazerTech.CharacterManagement.Core.CMSReferenceHandler.UnifiedCharacterMaterial
  href: BlazerTech.CharacterManagement.Core.CMSReferenceHandler.html#BlazerTech_CharacterManagement_Core_CMSReferenceHandler_UnifiedCharacterMaterial
  name: UnifiedCharacterMaterial
  nameWithType: CMSReferenceHandler.UnifiedCharacterMaterial
  fullName: BlazerTech.CharacterManagement.Core.CMSReferenceHandler.UnifiedCharacterMaterial
- uid: UnityEngine.Material
  commentId: T:UnityEngine.Material
  parent: UnityEngine
  isExternal: true
  name: Material
  nameWithType: Material
  fullName: UnityEngine.Material
- uid: BlazerTech.CharacterManagement.Core.CMSReferenceHandler.CharacterPiecesShaders*
  commentId: Overload:BlazerTech.CharacterManagement.Core.CMSReferenceHandler.CharacterPiecesShaders
  href: BlazerTech.CharacterManagement.Core.CMSReferenceHandler.html#BlazerTech_CharacterManagement_Core_CMSReferenceHandler_CharacterPiecesShaders
  name: CharacterPiecesShaders
  nameWithType: CMSReferenceHandler.CharacterPiecesShaders
  fullName: BlazerTech.CharacterManagement.Core.CMSReferenceHandler.CharacterPiecesShaders
- uid: BlazerTech.CharacterManagement.Core.SerializableDictionary{System.Int32,UnityEngine.Shader}
  commentId: T:BlazerTech.CharacterManagement.Core.SerializableDictionary{System.Int32,UnityEngine.Shader}
  parent: BlazerTech.CharacterManagement.Core
  definition: BlazerTech.CharacterManagement.Core.SerializableDictionary`2
  href: BlazerTech.CharacterManagement.Core.SerializableDictionary-2.html
  name: SerializableDictionary<int, Shader>
  nameWithType: SerializableDictionary<int, Shader>
  fullName: BlazerTech.CharacterManagement.Core.SerializableDictionary<int, UnityEngine.Shader>
  nameWithType.vb: SerializableDictionary(Of Integer, Shader)
  fullName.vb: BlazerTech.CharacterManagement.Core.SerializableDictionary(Of Integer, UnityEngine.Shader)
  name.vb: SerializableDictionary(Of Integer, Shader)
  spec.csharp:
  - uid: BlazerTech.CharacterManagement.Core.SerializableDictionary`2
    name: SerializableDictionary
    href: BlazerTech.CharacterManagement.Core.SerializableDictionary-2.html
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: UnityEngine.Shader
    name: Shader
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: BlazerTech.CharacterManagement.Core.SerializableDictionary`2
    name: SerializableDictionary
    href: BlazerTech.CharacterManagement.Core.SerializableDictionary-2.html
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: UnityEngine.Shader
    name: Shader
    isExternal: true
  - name: )
- uid: BlazerTech.CharacterManagement.Core.SerializableDictionary`2
  commentId: T:BlazerTech.CharacterManagement.Core.SerializableDictionary`2
  href: BlazerTech.CharacterManagement.Core.SerializableDictionary-2.html
  name: SerializableDictionary<TKey, TValue>
  nameWithType: SerializableDictionary<TKey, TValue>
  fullName: BlazerTech.CharacterManagement.Core.SerializableDictionary<TKey, TValue>
  nameWithType.vb: SerializableDictionary(Of TKey, TValue)
  fullName.vb: BlazerTech.CharacterManagement.Core.SerializableDictionary(Of TKey, TValue)
  name.vb: SerializableDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: BlazerTech.CharacterManagement.Core.SerializableDictionary`2
    name: SerializableDictionary
    href: BlazerTech.CharacterManagement.Core.SerializableDictionary-2.html
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: BlazerTech.CharacterManagement.Core.SerializableDictionary`2
    name: SerializableDictionary
    href: BlazerTech.CharacterManagement.Core.SerializableDictionary-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: BlazerTech.CharacterManagement.Core.CMSReferenceHandler.CharacterTypes*
  commentId: Overload:BlazerTech.CharacterManagement.Core.CMSReferenceHandler.CharacterTypes
  href: BlazerTech.CharacterManagement.Core.CMSReferenceHandler.html#BlazerTech_CharacterManagement_Core_CMSReferenceHandler_CharacterTypes
  name: CharacterTypes
  nameWithType: CMSReferenceHandler.CharacterTypes
  fullName: BlazerTech.CharacterManagement.Core.CMSReferenceHandler.CharacterTypes
- uid: BlazerTech.CharacterManagement.Characters.LayeredCharacterTypeSO[]
  isExternal: true
  href: BlazerTech.CharacterManagement.Characters.LayeredCharacterTypeSO.html
  name: LayeredCharacterTypeSO[]
  nameWithType: LayeredCharacterTypeSO[]
  fullName: BlazerTech.CharacterManagement.Characters.LayeredCharacterTypeSO[]
  nameWithType.vb: LayeredCharacterTypeSO()
  fullName.vb: BlazerTech.CharacterManagement.Characters.LayeredCharacterTypeSO()
  name.vb: LayeredCharacterTypeSO()
  spec.csharp:
  - uid: BlazerTech.CharacterManagement.Characters.LayeredCharacterTypeSO
    name: LayeredCharacterTypeSO
    href: BlazerTech.CharacterManagement.Characters.LayeredCharacterTypeSO.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: BlazerTech.CharacterManagement.Characters.LayeredCharacterTypeSO
    name: LayeredCharacterTypeSO
    href: BlazerTech.CharacterManagement.Characters.LayeredCharacterTypeSO.html
  - name: (
  - name: )
- uid: BlazerTech.CharacterManagement.Core.CMSReferenceHandler.GetLayeredCharacterTypes*
  commentId: Overload:BlazerTech.CharacterManagement.Core.CMSReferenceHandler.GetLayeredCharacterTypes
  href: BlazerTech.CharacterManagement.Core.CMSReferenceHandler.html#BlazerTech_CharacterManagement_Core_CMSReferenceHandler_GetLayeredCharacterTypes
  name: GetLayeredCharacterTypes
  nameWithType: CMSReferenceHandler.GetLayeredCharacterTypes
  fullName: BlazerTech.CharacterManagement.Core.CMSReferenceHandler.GetLayeredCharacterTypes
- uid: System.Collections.Generic.List{BlazerTech.CharacterManagement.Characters.LayeredCharacterTypeSO}
  commentId: T:System.Collections.Generic.List{BlazerTech.CharacterManagement.Characters.LayeredCharacterTypeSO}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<LayeredCharacterTypeSO>
  nameWithType: List<LayeredCharacterTypeSO>
  fullName: System.Collections.Generic.List<BlazerTech.CharacterManagement.Characters.LayeredCharacterTypeSO>
  nameWithType.vb: List(Of LayeredCharacterTypeSO)
  fullName.vb: System.Collections.Generic.List(Of BlazerTech.CharacterManagement.Characters.LayeredCharacterTypeSO)
  name.vb: List(Of LayeredCharacterTypeSO)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: BlazerTech.CharacterManagement.Characters.LayeredCharacterTypeSO
    name: LayeredCharacterTypeSO
    href: BlazerTech.CharacterManagement.Characters.LayeredCharacterTypeSO.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: BlazerTech.CharacterManagement.Characters.LayeredCharacterTypeSO
    name: LayeredCharacterTypeSO
    href: BlazerTech.CharacterManagement.Characters.LayeredCharacterTypeSO.html
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: BlazerTech.CharacterManagement.Core.CMSReferenceHandler.GetLayeredCharacterGroupTemplates*
  commentId: Overload:BlazerTech.CharacterManagement.Core.CMSReferenceHandler.GetLayeredCharacterGroupTemplates
  href: BlazerTech.CharacterManagement.Core.CMSReferenceHandler.html#BlazerTech_CharacterManagement_Core_CMSReferenceHandler_GetLayeredCharacterGroupTemplates
  name: GetLayeredCharacterGroupTemplates
  nameWithType: CMSReferenceHandler.GetLayeredCharacterGroupTemplates
  fullName: BlazerTech.CharacterManagement.Core.CMSReferenceHandler.GetLayeredCharacterGroupTemplates
- uid: System.Collections.Generic.List{BlazerTech.CharacterManagement.Characters.LayeredCharacterGroupTemplateSO}
  commentId: T:System.Collections.Generic.List{BlazerTech.CharacterManagement.Characters.LayeredCharacterGroupTemplateSO}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<LayeredCharacterGroupTemplateSO>
  nameWithType: List<LayeredCharacterGroupTemplateSO>
  fullName: System.Collections.Generic.List<BlazerTech.CharacterManagement.Characters.LayeredCharacterGroupTemplateSO>
  nameWithType.vb: List(Of LayeredCharacterGroupTemplateSO)
  fullName.vb: System.Collections.Generic.List(Of BlazerTech.CharacterManagement.Characters.LayeredCharacterGroupTemplateSO)
  name.vb: List(Of LayeredCharacterGroupTemplateSO)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: BlazerTech.CharacterManagement.Characters.LayeredCharacterGroupTemplateSO
    name: LayeredCharacterGroupTemplateSO
    href: BlazerTech.CharacterManagement.Characters.LayeredCharacterGroupTemplateSO.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: BlazerTech.CharacterManagement.Characters.LayeredCharacterGroupTemplateSO
    name: LayeredCharacterGroupTemplateSO
    href: BlazerTech.CharacterManagement.Characters.LayeredCharacterGroupTemplateSO.html
  - name: )
- uid: BlazerTech.CharacterManagement.Core.CMSReferenceHandler.GetCharacterTypesAsync*
  commentId: Overload:BlazerTech.CharacterManagement.Core.CMSReferenceHandler.GetCharacterTypesAsync
  href: BlazerTech.CharacterManagement.Core.CMSReferenceHandler.html#BlazerTech_CharacterManagement_Core_CMSReferenceHandler_GetCharacterTypesAsync
  name: GetCharacterTypesAsync
  nameWithType: CMSReferenceHandler.GetCharacterTypesAsync
  fullName: BlazerTech.CharacterManagement.Core.CMSReferenceHandler.GetCharacterTypesAsync
- uid: System.Threading.Tasks.Task{System.Collections.Generic.List{BlazerTech.CharacterManagement.Characters.LayeredCharacterTypeSO}}
  commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.List{BlazerTech.CharacterManagement.Characters.LayeredCharacterTypeSO}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<List<LayeredCharacterTypeSO>>
  nameWithType: Task<List<LayeredCharacterTypeSO>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.List<BlazerTech.CharacterManagement.Characters.LayeredCharacterTypeSO>>
  nameWithType.vb: Task(Of List(Of LayeredCharacterTypeSO))
  fullName.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of BlazerTech.CharacterManagement.Characters.LayeredCharacterTypeSO))
  name.vb: Task(Of List(Of LayeredCharacterTypeSO))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: BlazerTech.CharacterManagement.Characters.LayeredCharacterTypeSO
    name: LayeredCharacterTypeSO
    href: BlazerTech.CharacterManagement.Characters.LayeredCharacterTypeSO.html
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: BlazerTech.CharacterManagement.Characters.LayeredCharacterTypeSO
    name: LayeredCharacterTypeSO
    href: BlazerTech.CharacterManagement.Characters.LayeredCharacterTypeSO.html
  - name: )
  - name: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: BlazerTech.CharacterManagement.Core.CMSReferenceHandler.SetCharacterTypes*
  commentId: Overload:BlazerTech.CharacterManagement.Core.CMSReferenceHandler.SetCharacterTypes
  href: BlazerTech.CharacterManagement.Core.CMSReferenceHandler.html#BlazerTech_CharacterManagement_Core_CMSReferenceHandler_SetCharacterTypes_BlazerTech_CharacterManagement_Characters_LayeredCharacterTypeSO___
  name: SetCharacterTypes
  nameWithType: CMSReferenceHandler.SetCharacterTypes
  fullName: BlazerTech.CharacterManagement.Core.CMSReferenceHandler.SetCharacterTypes
- uid: BlazerTech.CharacterManagement.Core.CMSReferenceHandler.GetCharacterTypeFromIdentifier*
  commentId: Overload:BlazerTech.CharacterManagement.Core.CMSReferenceHandler.GetCharacterTypeFromIdentifier
  href: BlazerTech.CharacterManagement.Core.CMSReferenceHandler.html#BlazerTech_CharacterManagement_Core_CMSReferenceHandler_GetCharacterTypeFromIdentifier_System_String_
  name: GetCharacterTypeFromIdentifier
  nameWithType: CMSReferenceHandler.GetCharacterTypeFromIdentifier
  fullName: BlazerTech.CharacterManagement.Core.CMSReferenceHandler.GetCharacterTypeFromIdentifier
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: BlazerTech.CharacterManagement.Characters.LayeredCharacterTypeSO
  commentId: T:BlazerTech.CharacterManagement.Characters.LayeredCharacterTypeSO
  parent: BlazerTech.CharacterManagement.Characters
  href: BlazerTech.CharacterManagement.Characters.LayeredCharacterTypeSO.html
  name: LayeredCharacterTypeSO
  nameWithType: LayeredCharacterTypeSO
  fullName: BlazerTech.CharacterManagement.Characters.LayeredCharacterTypeSO
- uid: BlazerTech.CharacterManagement.Characters
  commentId: N:BlazerTech.CharacterManagement.Characters
  href: BlazerTech.html
  name: BlazerTech.CharacterManagement.Characters
  nameWithType: BlazerTech.CharacterManagement.Characters
  fullName: BlazerTech.CharacterManagement.Characters
  spec.csharp:
  - uid: BlazerTech
    name: BlazerTech
    href: BlazerTech.html
  - name: .
  - uid: BlazerTech.CharacterManagement
    name: CharacterManagement
    href: BlazerTech.CharacterManagement.html
  - name: .
  - uid: BlazerTech.CharacterManagement.Characters
    name: Characters
    href: BlazerTech.CharacterManagement.Characters.html
  spec.vb:
  - uid: BlazerTech
    name: BlazerTech
    href: BlazerTech.html
  - name: .
  - uid: BlazerTech.CharacterManagement
    name: CharacterManagement
    href: BlazerTech.CharacterManagement.html
  - name: .
  - uid: BlazerTech.CharacterManagement.Characters
    name: Characters
    href: BlazerTech.CharacterManagement.Characters.html
